// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ebnn_compute.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ebnn_compute::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ebnn_compute::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<51> ebnn_compute::ap_ST_fsm_state1 = "1";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state2 = "10";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state3 = "100";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state4 = "1000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state5 = "10000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state6 = "100000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state7 = "1000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state8 = "10000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state9 = "100000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state10 = "1000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state11 = "10000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state12 = "100000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<51> ebnn_compute::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<32> ebnn_compute::ap_const_lv32_0 = "00000000000000000000000000000000";
const int ebnn_compute::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> ebnn_compute::ap_const_lv32_12 = "10010";
const sc_lv<32> ebnn_compute::ap_const_lv32_17 = "10111";
const sc_lv<32> ebnn_compute::ap_const_lv32_30 = "110000";
const sc_lv<32> ebnn_compute::ap_const_lv32_1 = "1";
const sc_lv<32> ebnn_compute::ap_const_lv32_2 = "10";
const sc_lv<1> ebnn_compute::ap_const_lv1_0 = "0";
const sc_lv<32> ebnn_compute::ap_const_lv32_3 = "11";
const sc_lv<32> ebnn_compute::ap_const_lv32_5 = "101";
const sc_lv<32> ebnn_compute::ap_const_lv32_6 = "110";
const sc_lv<1> ebnn_compute::ap_const_lv1_1 = "1";
const sc_lv<32> ebnn_compute::ap_const_lv32_7 = "111";
const sc_lv<32> ebnn_compute::ap_const_lv32_8 = "1000";
const sc_lv<32> ebnn_compute::ap_const_lv32_C = "1100";
const sc_lv<32> ebnn_compute::ap_const_lv32_D = "1101";
const sc_lv<32> ebnn_compute::ap_const_lv32_11 = "10001";
const sc_lv<32> ebnn_compute::ap_const_lv32_16 = "10110";
const sc_lv<32> ebnn_compute::ap_const_lv32_26 = "100110";
const sc_lv<32> ebnn_compute::ap_const_lv32_27 = "100111";
const sc_lv<32> ebnn_compute::ap_const_lv32_2B = "101011";
const sc_lv<32> ebnn_compute::ap_const_lv32_31 = "110001";
const sc_lv<32> ebnn_compute::ap_const_lv32_32 = "110010";
const sc_lv<6> ebnn_compute::ap_const_lv6_0 = "000000";
const sc_lv<32> ebnn_compute::ap_const_lv32_4 = "100";
const sc_lv<4> ebnn_compute::ap_const_lv4_0 = "0000";
const sc_lv<9> ebnn_compute::ap_const_lv9_0 = "000000000";
const sc_lv<32> ebnn_compute::ap_const_lv32_FF7FFFFF = "11111111011111111111111111111111";
const sc_lv<10> ebnn_compute::ap_const_lv10_0 = "0000000000";
const sc_lv<64> ebnn_compute::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<8> ebnn_compute::ap_const_lv8_0 = "00000000";
const sc_lv<32> ebnn_compute::ap_const_lv32_E = "1110";
const sc_lv<32> ebnn_compute::ap_const_lv32_13 = "10011";
const sc_lv<32> ebnn_compute::ap_const_lv32_2C = "101100";
const sc_lv<32> ebnn_compute::ap_const_lv32_28 = "101000";
const sc_lv<32> ebnn_compute::ap_const_lv32_18 = "11000";
const sc_lv<6> ebnn_compute::ap_const_lv6_2D = "101101";
const sc_lv<6> ebnn_compute::ap_const_lv6_1 = "1";
const sc_lv<4> ebnn_compute::ap_const_lv4_A = "1010";
const sc_lv<4> ebnn_compute::ap_const_lv4_1 = "1";
const sc_lv<9> ebnn_compute::ap_const_lv9_24 = "100100";
const sc_lv<9> ebnn_compute::ap_const_lv9_2D = "101101";
const sc_lv<11> ebnn_compute::ap_const_lv11_698 = "11010011000";
const sc_lv<8> ebnn_compute::ap_const_lv8_FF = "11111111";
const sc_lv<2> ebnn_compute::ap_const_lv2_0 = "00";
const sc_lv<32> ebnn_compute::ap_const_lv32_1E = "11110";
const sc_lv<23> ebnn_compute::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<2> ebnn_compute::ap_const_lv2_1 = "1";
const sc_lv<5> ebnn_compute::ap_const_lv5_2 = "10";
const bool ebnn_compute::ap_const_boolean_1 = true;

ebnn_compute::ebnn_compute(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp1_U = new ebnn_compute_temp1("temp1_U");
    temp1_U->clk(ap_clk);
    temp1_U->reset(ap_rst_n_inv);
    temp1_U->address0(temp1_address0);
    temp1_U->ce0(temp1_ce0);
    temp1_U->we0(temp1_we0);
    temp1_U->d0(temp1_d0);
    temp1_U->q0(temp1_q0);
    l_conv_pool_bn_bst0_1_U = new ebnn_compute_l_cohbi("l_conv_pool_bn_bst0_1_U");
    l_conv_pool_bn_bst0_1_U->clk(ap_clk);
    l_conv_pool_bn_bst0_1_U->reset(ap_rst_n_inv);
    l_conv_pool_bn_bst0_1_U->address0(l_conv_pool_bn_bst0_1_address0);
    l_conv_pool_bn_bst0_1_U->ce0(l_conv_pool_bn_bst0_1_ce0);
    l_conv_pool_bn_bst0_1_U->q0(l_conv_pool_bn_bst0_1_q0);
    l_conv_pool_bn_bst0_4_U = new ebnn_compute_l_coibs("l_conv_pool_bn_bst0_4_U");
    l_conv_pool_bn_bst0_4_U->clk(ap_clk);
    l_conv_pool_bn_bst0_4_U->reset(ap_rst_n_inv);
    l_conv_pool_bn_bst0_4_U->address0(l_conv_pool_bn_bst0_4_address0);
    l_conv_pool_bn_bst0_4_U->ce0(l_conv_pool_bn_bst0_4_ce0);
    l_conv_pool_bn_bst0_4_U->q0(l_conv_pool_bn_bst0_4_q0);
    l_conv_pool_bn_bst0_3_U = new ebnn_compute_l_cojbC("l_conv_pool_bn_bst0_3_U");
    l_conv_pool_bn_bst0_3_U->clk(ap_clk);
    l_conv_pool_bn_bst0_3_U->reset(ap_rst_n_inv);
    l_conv_pool_bn_bst0_3_U->address0(l_conv_pool_bn_bst0_3_address0);
    l_conv_pool_bn_bst0_3_U->ce0(l_conv_pool_bn_bst0_3_ce0);
    l_conv_pool_bn_bst0_3_U->q0(l_conv_pool_bn_bst0_3_q0);
    l_conv_pool_bn_bst0_5_U = new ebnn_compute_l_cokbM("l_conv_pool_bn_bst0_5_U");
    l_conv_pool_bn_bst0_5_U->clk(ap_clk);
    l_conv_pool_bn_bst0_5_U->reset(ap_rst_n_inv);
    l_conv_pool_bn_bst0_5_U->address0(l_conv_pool_bn_bst0_5_address0);
    l_conv_pool_bn_bst0_5_U->ce0(l_conv_pool_bn_bst0_5_ce0);
    l_conv_pool_bn_bst0_5_U->q0(l_conv_pool_bn_bst0_5_q0);
    l_conv_pool_bn_bst0_s_U = new ebnn_compute_l_colbW("l_conv_pool_bn_bst0_s_U");
    l_conv_pool_bn_bst0_s_U->clk(ap_clk);
    l_conv_pool_bn_bst0_s_U->reset(ap_rst_n_inv);
    l_conv_pool_bn_bst0_s_U->address0(l_conv_pool_bn_bst0_s_address0);
    l_conv_pool_bn_bst0_s_U->ce0(l_conv_pool_bn_bst0_s_ce0);
    l_conv_pool_bn_bst0_s_U->q0(l_conv_pool_bn_bst0_s_q0);
    l_b_linear_bn_softma_6_U = new ebnn_compute_l_b_mb6("l_b_linear_bn_softma_6_U");
    l_b_linear_bn_softma_6_U->clk(ap_clk);
    l_b_linear_bn_softma_6_U->reset(ap_rst_n_inv);
    l_b_linear_bn_softma_6_U->address0(l_b_linear_bn_softma_6_address0);
    l_b_linear_bn_softma_6_U->ce0(l_b_linear_bn_softma_6_ce0);
    l_b_linear_bn_softma_6_U->q0(l_b_linear_bn_softma_6_q0);
    l_b_linear_bn_softma_1_U = new ebnn_compute_l_b_ncg("l_b_linear_bn_softma_1_U");
    l_b_linear_bn_softma_1_U->clk(ap_clk);
    l_b_linear_bn_softma_1_U->reset(ap_rst_n_inv);
    l_b_linear_bn_softma_1_U->address0(l_b_linear_bn_softma_1_address0);
    l_b_linear_bn_softma_1_U->ce0(l_b_linear_bn_softma_1_ce0);
    l_b_linear_bn_softma_1_U->q0(l_b_linear_bn_softma_1_q0);
    l_b_linear_bn_softma_4_U = new ebnn_compute_l_b_ocq("l_b_linear_bn_softma_4_U");
    l_b_linear_bn_softma_4_U->clk(ap_clk);
    l_b_linear_bn_softma_4_U->reset(ap_rst_n_inv);
    l_b_linear_bn_softma_4_U->address0(l_b_linear_bn_softma_4_address0);
    l_b_linear_bn_softma_4_U->ce0(l_b_linear_bn_softma_4_ce0);
    l_b_linear_bn_softma_4_U->q0(l_b_linear_bn_softma_4_q0);
    l_b_linear_bn_softma_3_U = new ebnn_compute_l_b_pcA("l_b_linear_bn_softma_3_U");
    l_b_linear_bn_softma_3_U->clk(ap_clk);
    l_b_linear_bn_softma_3_U->reset(ap_rst_n_inv);
    l_b_linear_bn_softma_3_U->address0(l_b_linear_bn_softma_3_address0);
    l_b_linear_bn_softma_3_U->ce0(l_b_linear_bn_softma_3_ce0);
    l_b_linear_bn_softma_3_U->q0(l_b_linear_bn_softma_3_q0);
    l_b_linear_bn_softma_5_U = new ebnn_compute_l_b_qcK("l_b_linear_bn_softma_5_U");
    l_b_linear_bn_softma_5_U->clk(ap_clk);
    l_b_linear_bn_softma_5_U->reset(ap_rst_n_inv);
    l_b_linear_bn_softma_5_U->address0(l_b_linear_bn_softma_5_address0);
    l_b_linear_bn_softma_5_U->ce0(l_b_linear_bn_softma_5_ce0);
    l_b_linear_bn_softma_5_U->q0(l_b_linear_bn_softma_5_q0);
    l_b_linear_bn_softma_U = new ebnn_compute_l_b_rcU("l_b_linear_bn_softma_U");
    l_b_linear_bn_softma_U->clk(ap_clk);
    l_b_linear_bn_softma_U->reset(ap_rst_n_inv);
    l_b_linear_bn_softma_U->address0(l_b_linear_bn_softma_address0);
    l_b_linear_bn_softma_U->ce0(l_b_linear_bn_softma_ce0);
    l_b_linear_bn_softma_U->q0(l_b_linear_bn_softma_q0);
    ebnn_compute_inputINT_s_axi_U = new ebnn_compute_inputINT_s_axi<C_S_AXI_INPUTINT_ADDR_WIDTH,C_S_AXI_INPUTINT_DATA_WIDTH>("ebnn_compute_inputINT_s_axi_U");
    ebnn_compute_inputINT_s_axi_U->AWVALID(s_axi_inputINT_AWVALID);
    ebnn_compute_inputINT_s_axi_U->AWREADY(s_axi_inputINT_AWREADY);
    ebnn_compute_inputINT_s_axi_U->AWADDR(s_axi_inputINT_AWADDR);
    ebnn_compute_inputINT_s_axi_U->WVALID(s_axi_inputINT_WVALID);
    ebnn_compute_inputINT_s_axi_U->WREADY(s_axi_inputINT_WREADY);
    ebnn_compute_inputINT_s_axi_U->WDATA(s_axi_inputINT_WDATA);
    ebnn_compute_inputINT_s_axi_U->WSTRB(s_axi_inputINT_WSTRB);
    ebnn_compute_inputINT_s_axi_U->ARVALID(s_axi_inputINT_ARVALID);
    ebnn_compute_inputINT_s_axi_U->ARREADY(s_axi_inputINT_ARREADY);
    ebnn_compute_inputINT_s_axi_U->ARADDR(s_axi_inputINT_ARADDR);
    ebnn_compute_inputINT_s_axi_U->RVALID(s_axi_inputINT_RVALID);
    ebnn_compute_inputINT_s_axi_U->RREADY(s_axi_inputINT_RREADY);
    ebnn_compute_inputINT_s_axi_U->RDATA(s_axi_inputINT_RDATA);
    ebnn_compute_inputINT_s_axi_U->RRESP(s_axi_inputINT_RRESP);
    ebnn_compute_inputINT_s_axi_U->BVALID(s_axi_inputINT_BVALID);
    ebnn_compute_inputINT_s_axi_U->BREADY(s_axi_inputINT_BREADY);
    ebnn_compute_inputINT_s_axi_U->BRESP(s_axi_inputINT_BRESP);
    ebnn_compute_inputINT_s_axi_U->ACLK(ap_clk);
    ebnn_compute_inputINT_s_axi_U->ARESET(ap_rst_n_inv);
    ebnn_compute_inputINT_s_axi_U->ACLK_EN(ap_var_for_const0);
    ebnn_compute_inputINT_s_axi_U->input_r_address0(grp_fconv_fu_416_A_address0);
    ebnn_compute_inputINT_s_axi_U->input_r_ce0(grp_fconv_fu_416_A_ce0);
    ebnn_compute_inputINT_s_axi_U->input_r_q0(input_r_q0);
    ebnn_compute_outputCONTRL_s_axi_U = new ebnn_compute_outputCONTRL_s_axi<C_S_AXI_OUTPUTCONTRL_ADDR_WIDTH,C_S_AXI_OUTPUTCONTRL_DATA_WIDTH>("ebnn_compute_outputCONTRL_s_axi_U");
    ebnn_compute_outputCONTRL_s_axi_U->AWVALID(s_axi_outputCONTRL_AWVALID);
    ebnn_compute_outputCONTRL_s_axi_U->AWREADY(s_axi_outputCONTRL_AWREADY);
    ebnn_compute_outputCONTRL_s_axi_U->AWADDR(s_axi_outputCONTRL_AWADDR);
    ebnn_compute_outputCONTRL_s_axi_U->WVALID(s_axi_outputCONTRL_WVALID);
    ebnn_compute_outputCONTRL_s_axi_U->WREADY(s_axi_outputCONTRL_WREADY);
    ebnn_compute_outputCONTRL_s_axi_U->WDATA(s_axi_outputCONTRL_WDATA);
    ebnn_compute_outputCONTRL_s_axi_U->WSTRB(s_axi_outputCONTRL_WSTRB);
    ebnn_compute_outputCONTRL_s_axi_U->ARVALID(s_axi_outputCONTRL_ARVALID);
    ebnn_compute_outputCONTRL_s_axi_U->ARREADY(s_axi_outputCONTRL_ARREADY);
    ebnn_compute_outputCONTRL_s_axi_U->ARADDR(s_axi_outputCONTRL_ARADDR);
    ebnn_compute_outputCONTRL_s_axi_U->RVALID(s_axi_outputCONTRL_RVALID);
    ebnn_compute_outputCONTRL_s_axi_U->RREADY(s_axi_outputCONTRL_RREADY);
    ebnn_compute_outputCONTRL_s_axi_U->RDATA(s_axi_outputCONTRL_RDATA);
    ebnn_compute_outputCONTRL_s_axi_U->RRESP(s_axi_outputCONTRL_RRESP);
    ebnn_compute_outputCONTRL_s_axi_U->BVALID(s_axi_outputCONTRL_BVALID);
    ebnn_compute_outputCONTRL_s_axi_U->BREADY(s_axi_outputCONTRL_BREADY);
    ebnn_compute_outputCONTRL_s_axi_U->BRESP(s_axi_outputCONTRL_BRESP);
    ebnn_compute_outputCONTRL_s_axi_U->ACLK(ap_clk);
    ebnn_compute_outputCONTRL_s_axi_U->ARESET(ap_rst_n_inv);
    ebnn_compute_outputCONTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    ebnn_compute_outputCONTRL_s_axi_U->ap_start(ap_start);
    ebnn_compute_outputCONTRL_s_axi_U->interrupt(interrupt);
    ebnn_compute_outputCONTRL_s_axi_U->ap_ready(ap_ready);
    ebnn_compute_outputCONTRL_s_axi_U->ap_done(ap_done);
    ebnn_compute_outputCONTRL_s_axi_U->ap_idle(ap_idle);
    ebnn_compute_outputINT_s_axi_U = new ebnn_compute_outputINT_s_axi<C_S_AXI_OUTPUTINT_ADDR_WIDTH,C_S_AXI_OUTPUTINT_DATA_WIDTH>("ebnn_compute_outputINT_s_axi_U");
    ebnn_compute_outputINT_s_axi_U->AWVALID(s_axi_outputINT_AWVALID);
    ebnn_compute_outputINT_s_axi_U->AWREADY(s_axi_outputINT_AWREADY);
    ebnn_compute_outputINT_s_axi_U->AWADDR(s_axi_outputINT_AWADDR);
    ebnn_compute_outputINT_s_axi_U->WVALID(s_axi_outputINT_WVALID);
    ebnn_compute_outputINT_s_axi_U->WREADY(s_axi_outputINT_WREADY);
    ebnn_compute_outputINT_s_axi_U->WDATA(s_axi_outputINT_WDATA);
    ebnn_compute_outputINT_s_axi_U->WSTRB(s_axi_outputINT_WSTRB);
    ebnn_compute_outputINT_s_axi_U->ARVALID(s_axi_outputINT_ARVALID);
    ebnn_compute_outputINT_s_axi_U->ARREADY(s_axi_outputINT_ARREADY);
    ebnn_compute_outputINT_s_axi_U->ARADDR(s_axi_outputINT_ARADDR);
    ebnn_compute_outputINT_s_axi_U->RVALID(s_axi_outputINT_RVALID);
    ebnn_compute_outputINT_s_axi_U->RREADY(s_axi_outputINT_RREADY);
    ebnn_compute_outputINT_s_axi_U->RDATA(s_axi_outputINT_RDATA);
    ebnn_compute_outputINT_s_axi_U->RRESP(s_axi_outputINT_RRESP);
    ebnn_compute_outputINT_s_axi_U->BVALID(s_axi_outputINT_BVALID);
    ebnn_compute_outputINT_s_axi_U->BREADY(s_axi_outputINT_BREADY);
    ebnn_compute_outputINT_s_axi_U->BRESP(s_axi_outputINT_BRESP);
    ebnn_compute_outputINT_s_axi_U->ACLK(ap_clk);
    ebnn_compute_outputINT_s_axi_U->ARESET(ap_rst_n_inv);
    ebnn_compute_outputINT_s_axi_U->ACLK_EN(ap_var_for_const0);
    ebnn_compute_outputINT_s_axi_U->output_r_address0(output_r_address0);
    ebnn_compute_outputINT_s_axi_U->output_r_ce0(output_r_ce0);
    ebnn_compute_outputINT_s_axi_U->output_r_we0(output_r_we0);
    ebnn_compute_outputINT_s_axi_U->output_r_d0(output_r_d0);
    grp_fconv_fu_416 = new fconv("grp_fconv_fu_416");
    grp_fconv_fu_416->ap_clk(ap_clk);
    grp_fconv_fu_416->ap_rst(ap_rst_n_inv);
    grp_fconv_fu_416->ap_start(grp_fconv_fu_416_ap_start);
    grp_fconv_fu_416->ap_done(grp_fconv_fu_416_ap_done);
    grp_fconv_fu_416->ap_idle(grp_fconv_fu_416_ap_idle);
    grp_fconv_fu_416->ap_ready(grp_fconv_fu_416_ap_ready);
    grp_fconv_fu_416->A_address0(grp_fconv_fu_416_A_address0);
    grp_fconv_fu_416->A_ce0(grp_fconv_fu_416_A_ce0);
    grp_fconv_fu_416->A_q0(input_r_q0);
    grp_fconv_fu_416->F_offset(f_idx_i_reg_932);
    grp_fconv_fu_416->C_address0(grp_fconv_fu_416_C_address0);
    grp_fconv_fu_416->C_ce0(grp_fconv_fu_416_C_ce0);
    grp_fconv_fu_416->C_we0(grp_fconv_fu_416_C_we0);
    grp_fconv_fu_416->C_d0(grp_fconv_fu_416_C_d0);
    grp_fconv_fu_416->C_q0(temp1_q0);
    grp_fconv_fu_416->c_start_idx(c_idx_1_i_reg_333);
    grp_fconv_fu_416->Bias(l_conv_pool_bn_bst0_8_reg_937);
    grp_fconv_fu_416->Gamma(l_conv_pool_bn_bst0_10_reg_942);
    grp_fconv_fu_416->Beta(l_conv_pool_bn_bst0_12_reg_947);
    grp_fconv_fu_416->Mean(l_conv_pool_bn_bst0_14_reg_952);
    grp_fconv_fu_416->Std(l_conv_pool_bn_bst0_16_reg_957);
    ebnn_compute_fadddEe_U26 = new ebnn_compute_fadddEe<1,5,32,32,32>("ebnn_compute_fadddEe_U26");
    ebnn_compute_fadddEe_U26->clk(ap_clk);
    ebnn_compute_fadddEe_U26->reset(ap_rst_n_inv);
    ebnn_compute_fadddEe_U26->din0(grp_fu_441_p0);
    ebnn_compute_fadddEe_U26->din1(grp_fu_441_p1);
    ebnn_compute_fadddEe_U26->opcode(grp_fu_441_opcode);
    ebnn_compute_fadddEe_U26->ce(ap_var_for_const0);
    ebnn_compute_fadddEe_U26->dout(grp_fu_441_p2);
    ebnn_compute_fmuleOg_U27 = new ebnn_compute_fmuleOg<1,4,32,32,32>("ebnn_compute_fmuleOg_U27");
    ebnn_compute_fmuleOg_U27->clk(ap_clk);
    ebnn_compute_fmuleOg_U27->reset(ap_rst_n_inv);
    ebnn_compute_fmuleOg_U27->din0(f_assign_6_reg_1091);
    ebnn_compute_fmuleOg_U27->din1(l_b_linear_bn_softma_11_reg_1081);
    ebnn_compute_fmuleOg_U27->ce(ap_var_for_const0);
    ebnn_compute_fmuleOg_U27->dout(grp_fu_445_p2);
    ebnn_compute_fdivfYi_U28 = new ebnn_compute_fdivfYi<1,16,32,32,32>("ebnn_compute_fdivfYi_U28");
    ebnn_compute_fdivfYi_U28->clk(ap_clk);
    ebnn_compute_fdivfYi_U28->reset(ap_rst_n_inv);
    ebnn_compute_fdivfYi_U28->din0(reg_461);
    ebnn_compute_fdivfYi_U28->din1(l_b_linear_bn_softma_17_reg_1066);
    ebnn_compute_fdivfYi_U28->ce(ap_var_for_const0);
    ebnn_compute_fdivfYi_U28->dout(grp_fu_449_p2);
    ebnn_compute_sitosc4_U29 = new ebnn_compute_sitosc4<1,6,32,32>("ebnn_compute_sitosc4_U29");
    ebnn_compute_sitosc4_U29->clk(ap_clk);
    ebnn_compute_sitosc4_U29->reset(ap_rst_n_inv);
    ebnn_compute_sitosc4_U29->din0(grp_fu_453_p0);
    ebnn_compute_sitosc4_U29->ce(ap_var_for_const0);
    ebnn_compute_sitosc4_U29->dout(grp_fu_453_p1);
    ebnn_compute_fcmpg8j_U30 = new ebnn_compute_fcmpg8j<1,1,32,32,1>("ebnn_compute_fcmpg8j_U30");
    ebnn_compute_fcmpg8j_U30->din0(reg_461);
    ebnn_compute_fcmpg8j_U30->din1(max_res_i_i_reg_369);
    ebnn_compute_fcmpg8j_U30->opcode(ap_var_for_const1);
    ebnn_compute_fcmpg8j_U30->dout(tmp_25_fu_456_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_i_i_fu_531_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_i_i_fu_531_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_c_1_fu_733_p2);
    sensitive << ( tmp_6_i_i_cast_fu_701_p1 );
    sensitive << ( tmp_7_i_i_cast_fu_729_p1 );

    SC_METHOD(thread_c_fu_665_p2);
    sensitive << ( v_assign_fu_605_p2 );
    sensitive << ( tmp_3_i_i_cast_fu_661_p1 );

    SC_METHOD(thread_exitcond1_fu_468_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_i_reg_310 );

    SC_METHOD(thread_exitcond_fu_548_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_i1_reg_393 );

    SC_METHOD(thread_exitcond_i_fu_485_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_i_reg_321 );

    SC_METHOD(thread_exitcond_i_i_fu_531_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( max_idx_i_i_reg_345 );

    SC_METHOD(thread_f_assign_8_to_int_fu_793_p1);
    sensitive << ( reg_461 );

    SC_METHOD(thread_f_idx_i_fu_506_p3);
    sensitive << ( j_i_reg_321 );

    SC_METHOD(thread_grp_fconv_fu_416_ap_start);
    sensitive << ( ap_reg_grp_fconv_fu_416_ap_start );

    SC_METHOD(thread_grp_fu_441_opcode);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_fu_441_p0);
    sensitive << ( reg_461 );
    sensitive << ( res_i_i_reg_1041 );
    sensitive << ( f_assign_7_reg_1096 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_fu_441_p1);
    sensitive << ( l_b_linear_bn_softma_9_reg_1046 );
    sensitive << ( l_b_linear_bn_softma_15_reg_1056 );
    sensitive << ( l_b_linear_bn_softma_13_reg_1086 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_grp_fu_453_p0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( res_3_fu_588_p2 );

    SC_METHOD(thread_i_1_fu_554_p2);
    sensitive << ( i_i1_reg_393 );

    SC_METHOD(thread_i_fu_474_p2);
    sensitive << ( i_i_reg_310 );

    SC_METHOD(thread_j_2_i_fu_491_p2);
    sensitive << ( j_i_reg_321 );

    SC_METHOD(thread_j_i_i_fu_537_p2);
    sensitive << ( max_idx_i_i_reg_345 );

    SC_METHOD(thread_l_b_linear_bn_softma_1_address0);
    sensitive << ( tmp_77_i_i_fu_788_p1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_l_b_linear_bn_softma_1_ce0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_l_b_linear_bn_softma_3_address0);
    sensitive << ( tmp_77_i_i_reg_1028 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_l_b_linear_bn_softma_3_ce0);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_l_b_linear_bn_softma_4_address0);
    sensitive << ( tmp_77_i_i_reg_1028 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_l_b_linear_bn_softma_4_ce0);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_l_b_linear_bn_softma_5_address0);
    sensitive << ( tmp_77_i_i_reg_1028 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_l_b_linear_bn_softma_5_ce0);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_l_b_linear_bn_softma_6_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sum3_i_cast_fu_575_p1 );

    SC_METHOD(thread_l_b_linear_bn_softma_6_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_l_b_linear_bn_softma_address0);
    sensitive << ( tmp_77_i_i_reg_1028 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_l_b_linear_bn_softma_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_16_i_fu_497_p1 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_16_i_fu_497_p1 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_4_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_16_i_fu_497_p1 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_4_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_5_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_16_i_fu_497_p1 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_5_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_s_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_16_i_fu_497_p1 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_s_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_max_idx_2_i_i_fu_876_p3);
    sensitive << ( max_idx_i_i_cast5_reg_972 );
    sensitive << ( max_idx_1_i_i_reg_357 );
    sensitive << ( tmp_26_fu_871_p2 );

    SC_METHOD(thread_max_idx_i_i_cast5_fu_527_p1);
    sensitive << ( max_idx_i_i_reg_345 );

    SC_METHOD(thread_max_res_1_i_i_fu_883_p3);
    sensitive << ( reg_461 );
    sensitive << ( max_res_i_i_reg_369 );
    sensitive << ( tmp_26_fu_871_p2 );

    SC_METHOD(thread_max_res_i_i_to_int_fu_811_p1);
    sensitive << ( max_res_i_i_reg_369 );

    SC_METHOD(thread_next_mul_fu_521_p2);
    sensitive << ( phi_mul_reg_381 );

    SC_METHOD(thread_notlhs1_fu_847_p2);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( tmp_21_fu_815_p4 );

    SC_METHOD(thread_notlhs_fu_829_p2);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( tmp_s_fu_797_p4 );

    SC_METHOD(thread_notrhs1_fu_853_p2);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( tmp_37_fu_825_p1 );

    SC_METHOD(thread_notrhs_fu_835_p2);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( tmp_36_fu_807_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( max_idx_1_i_i_reg_357 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_i_i_fu_531_p2 );

    SC_METHOD(thread_res_3_fu_588_p2);
    sensitive << ( tmp_38_i_fu_580_p3 );

    SC_METHOD(thread_res_fu_782_p2);
    sensitive << ( res_i_reg_404 );
    sensitive << ( tmp_2_i_i_cast_fu_778_p1 );

    SC_METHOD(thread_sum3_i_cast_fu_575_p1);
    sensitive << ( sum3_i_fu_569_p2 );

    SC_METHOD(thread_sum3_i_fu_569_p2);
    sensitive << ( phi_mul_reg_381 );
    sensitive << ( tmp_35_i_cast_fu_565_p1 );

    SC_METHOD(thread_temp1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_fconv_fu_416_C_address0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_14_i_fu_480_p1 );
    sensitive << ( tmp_35_i_fu_560_p1 );

    SC_METHOD(thread_temp1_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_fconv_fu_416_C_ce0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_temp1_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fconv_fu_416_C_d0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_temp1_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fconv_fu_416_C_we0 );
    sensitive << ( exitcond1_fu_468_p2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_14_i_fu_480_p1);
    sensitive << ( i_i_reg_310 );

    SC_METHOD(thread_tmp_16_i_fu_497_p1);
    sensitive << ( j_i_reg_321 );

    SC_METHOD(thread_tmp_17_i_fu_515_p2);
    sensitive << ( c_idx_1_i_reg_333 );

    SC_METHOD(thread_tmp_1_i_i_fu_772_p2);
    sensitive << ( tmp_i_i_cast_fu_769_p1 );
    sensitive << ( tmp_9_i_i_cast3_fu_763_p2 );

    SC_METHOD(thread_tmp_21_fu_815_p4);
    sensitive << ( max_res_i_i_to_int_fu_811_p1 );

    SC_METHOD(thread_tmp_22_fu_841_p2);
    sensitive << ( notrhs_fu_835_p2 );
    sensitive << ( notlhs_fu_829_p2 );

    SC_METHOD(thread_tmp_23_fu_859_p2);
    sensitive << ( notrhs1_fu_853_p2 );
    sensitive << ( notlhs1_fu_847_p2 );

    SC_METHOD(thread_tmp_24_fu_865_p2);
    sensitive << ( tmp_22_fu_841_p2 );
    sensitive << ( tmp_23_fu_859_p2 );

    SC_METHOD(thread_tmp_26_fu_871_p2);
    sensitive << ( tmp_25_reg_1101 );
    sensitive << ( tmp_24_fu_865_p2 );

    SC_METHOD(thread_tmp_27_fu_749_p3);
    sensitive << ( tmp_46_reg_1013 );

    SC_METHOD(thread_tmp_28_fu_756_p3);
    sensitive << ( tmp_30_reg_1008 );

    SC_METHOD(thread_tmp_29_fu_671_p4);
    sensitive << ( c_fu_665_p2 );

    SC_METHOD(thread_tmp_2_i_i_cast_fu_778_p1);
    sensitive << ( tmp_1_i_i_fu_772_p2 );

    SC_METHOD(thread_tmp_30_fu_681_p4);
    sensitive << ( c_fu_665_p2 );

    SC_METHOD(thread_tmp_31_fu_705_p4);
    sensitive << ( c_fu_665_p2 );

    SC_METHOD(thread_tmp_35_i_cast_fu_565_p1);
    sensitive << ( i_i1_reg_393 );

    SC_METHOD(thread_tmp_35_i_fu_560_p1);
    sensitive << ( i_i1_reg_393 );

    SC_METHOD(thread_tmp_36_fu_807_p1);
    sensitive << ( f_assign_8_to_int_fu_793_p1 );

    SC_METHOD(thread_tmp_37_fu_825_p1);
    sensitive << ( max_res_i_i_to_int_fu_811_p1 );

    SC_METHOD(thread_tmp_38_fu_611_p3);
    sensitive << ( v_assign_fu_605_p2 );

    SC_METHOD(thread_tmp_38_i_fu_580_p3);
    sensitive << ( res_i_reg_404 );

    SC_METHOD(thread_tmp_3_i_i_cast_fu_661_p1);
    sensitive << ( tmp_3_i_i_fu_643_p8 );

    SC_METHOD(thread_tmp_3_i_i_fu_643_p8);
    sensitive << ( tmp_38_fu_611_p3 );
    sensitive << ( tmp_42_fu_619_p3 );
    sensitive << ( tmp_44_fu_627_p3 );
    sensitive << ( tmp_45_fu_635_p3 );

    SC_METHOD(thread_tmp_42_fu_619_p3);
    sensitive << ( v_assign_fu_605_p2 );

    SC_METHOD(thread_tmp_44_fu_627_p3);
    sensitive << ( v_assign_fu_605_p2 );

    SC_METHOD(thread_tmp_45_fu_635_p3);
    sensitive << ( v_assign_fu_605_p2 );

    SC_METHOD(thread_tmp_46_fu_715_p1);
    sensitive << ( c_fu_665_p2 );

    SC_METHOD(thread_tmp_6_i_i_cast_fu_701_p1);
    sensitive << ( tmp_6_i_i_fu_691_p4 );

    SC_METHOD(thread_tmp_6_i_i_fu_691_p4);
    sensitive << ( tmp_30_fu_681_p4 );
    sensitive << ( tmp_29_fu_671_p4 );

    SC_METHOD(thread_tmp_77_i_i_fu_788_p1);
    sensitive << ( max_idx_i_i_reg_345 );

    SC_METHOD(thread_tmp_7_i_i_cast_fu_729_p1);
    sensitive << ( tmp_7_i_i_fu_719_p4 );

    SC_METHOD(thread_tmp_7_i_i_fu_719_p4);
    sensitive << ( tmp_46_fu_715_p1 );
    sensitive << ( tmp_31_fu_705_p4 );

    SC_METHOD(thread_tmp_9_i_i_cast3_fu_763_p2);
    sensitive << ( tmp_27_fu_749_p3 );
    sensitive << ( tmp_28_fu_756_p3 );

    SC_METHOD(thread_tmp_fu_599_p2);
    sensitive << ( l_b_linear_bn_softma_6_q0 );

    SC_METHOD(thread_tmp_i_i_cast_fu_769_p1);
    sensitive << ( tmp_32_reg_1018 );

    SC_METHOD(thread_tmp_s_fu_797_p4);
    sensitive << ( f_assign_8_to_int_fu_793_p1 );

    SC_METHOD(thread_v_assign_fu_605_p2);
    sensitive << ( temp1_q0 );
    sensitive << ( tmp_fu_599_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_i_fu_485_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond_fu_548_p2 );
    sensitive << ( grp_fconv_fu_416_ap_done );
    sensitive << ( exitcond1_fu_468_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_i_i_fu_531_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000001";
    ap_reg_grp_fconv_fu_416_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ebnn_compute_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_inputINT_AWVALID, "(port)s_axi_inputINT_AWVALID");
    sc_trace(mVcdFile, s_axi_inputINT_AWREADY, "(port)s_axi_inputINT_AWREADY");
    sc_trace(mVcdFile, s_axi_inputINT_AWADDR, "(port)s_axi_inputINT_AWADDR");
    sc_trace(mVcdFile, s_axi_inputINT_WVALID, "(port)s_axi_inputINT_WVALID");
    sc_trace(mVcdFile, s_axi_inputINT_WREADY, "(port)s_axi_inputINT_WREADY");
    sc_trace(mVcdFile, s_axi_inputINT_WDATA, "(port)s_axi_inputINT_WDATA");
    sc_trace(mVcdFile, s_axi_inputINT_WSTRB, "(port)s_axi_inputINT_WSTRB");
    sc_trace(mVcdFile, s_axi_inputINT_ARVALID, "(port)s_axi_inputINT_ARVALID");
    sc_trace(mVcdFile, s_axi_inputINT_ARREADY, "(port)s_axi_inputINT_ARREADY");
    sc_trace(mVcdFile, s_axi_inputINT_ARADDR, "(port)s_axi_inputINT_ARADDR");
    sc_trace(mVcdFile, s_axi_inputINT_RVALID, "(port)s_axi_inputINT_RVALID");
    sc_trace(mVcdFile, s_axi_inputINT_RREADY, "(port)s_axi_inputINT_RREADY");
    sc_trace(mVcdFile, s_axi_inputINT_RDATA, "(port)s_axi_inputINT_RDATA");
    sc_trace(mVcdFile, s_axi_inputINT_RRESP, "(port)s_axi_inputINT_RRESP");
    sc_trace(mVcdFile, s_axi_inputINT_BVALID, "(port)s_axi_inputINT_BVALID");
    sc_trace(mVcdFile, s_axi_inputINT_BREADY, "(port)s_axi_inputINT_BREADY");
    sc_trace(mVcdFile, s_axi_inputINT_BRESP, "(port)s_axi_inputINT_BRESP");
    sc_trace(mVcdFile, s_axi_outputCONTRL_AWVALID, "(port)s_axi_outputCONTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_outputCONTRL_AWREADY, "(port)s_axi_outputCONTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_outputCONTRL_AWADDR, "(port)s_axi_outputCONTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_outputCONTRL_WVALID, "(port)s_axi_outputCONTRL_WVALID");
    sc_trace(mVcdFile, s_axi_outputCONTRL_WREADY, "(port)s_axi_outputCONTRL_WREADY");
    sc_trace(mVcdFile, s_axi_outputCONTRL_WDATA, "(port)s_axi_outputCONTRL_WDATA");
    sc_trace(mVcdFile, s_axi_outputCONTRL_WSTRB, "(port)s_axi_outputCONTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_outputCONTRL_ARVALID, "(port)s_axi_outputCONTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_outputCONTRL_ARREADY, "(port)s_axi_outputCONTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_outputCONTRL_ARADDR, "(port)s_axi_outputCONTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_outputCONTRL_RVALID, "(port)s_axi_outputCONTRL_RVALID");
    sc_trace(mVcdFile, s_axi_outputCONTRL_RREADY, "(port)s_axi_outputCONTRL_RREADY");
    sc_trace(mVcdFile, s_axi_outputCONTRL_RDATA, "(port)s_axi_outputCONTRL_RDATA");
    sc_trace(mVcdFile, s_axi_outputCONTRL_RRESP, "(port)s_axi_outputCONTRL_RRESP");
    sc_trace(mVcdFile, s_axi_outputCONTRL_BVALID, "(port)s_axi_outputCONTRL_BVALID");
    sc_trace(mVcdFile, s_axi_outputCONTRL_BREADY, "(port)s_axi_outputCONTRL_BREADY");
    sc_trace(mVcdFile, s_axi_outputCONTRL_BRESP, "(port)s_axi_outputCONTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, s_axi_outputINT_AWVALID, "(port)s_axi_outputINT_AWVALID");
    sc_trace(mVcdFile, s_axi_outputINT_AWREADY, "(port)s_axi_outputINT_AWREADY");
    sc_trace(mVcdFile, s_axi_outputINT_AWADDR, "(port)s_axi_outputINT_AWADDR");
    sc_trace(mVcdFile, s_axi_outputINT_WVALID, "(port)s_axi_outputINT_WVALID");
    sc_trace(mVcdFile, s_axi_outputINT_WREADY, "(port)s_axi_outputINT_WREADY");
    sc_trace(mVcdFile, s_axi_outputINT_WDATA, "(port)s_axi_outputINT_WDATA");
    sc_trace(mVcdFile, s_axi_outputINT_WSTRB, "(port)s_axi_outputINT_WSTRB");
    sc_trace(mVcdFile, s_axi_outputINT_ARVALID, "(port)s_axi_outputINT_ARVALID");
    sc_trace(mVcdFile, s_axi_outputINT_ARREADY, "(port)s_axi_outputINT_ARREADY");
    sc_trace(mVcdFile, s_axi_outputINT_ARADDR, "(port)s_axi_outputINT_ARADDR");
    sc_trace(mVcdFile, s_axi_outputINT_RVALID, "(port)s_axi_outputINT_RVALID");
    sc_trace(mVcdFile, s_axi_outputINT_RREADY, "(port)s_axi_outputINT_RREADY");
    sc_trace(mVcdFile, s_axi_outputINT_RDATA, "(port)s_axi_outputINT_RDATA");
    sc_trace(mVcdFile, s_axi_outputINT_RRESP, "(port)s_axi_outputINT_RRESP");
    sc_trace(mVcdFile, s_axi_outputINT_BVALID, "(port)s_axi_outputINT_BVALID");
    sc_trace(mVcdFile, s_axi_outputINT_BREADY, "(port)s_axi_outputINT_BREADY");
    sc_trace(mVcdFile, s_axi_outputINT_BRESP, "(port)s_axi_outputINT_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_r_q0, "input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "output_r_d0");
    sc_trace(mVcdFile, temp1_address0, "temp1_address0");
    sc_trace(mVcdFile, temp1_ce0, "temp1_ce0");
    sc_trace(mVcdFile, temp1_we0, "temp1_we0");
    sc_trace(mVcdFile, temp1_d0, "temp1_d0");
    sc_trace(mVcdFile, temp1_q0, "temp1_q0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_1_address0, "l_conv_pool_bn_bst0_1_address0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_1_ce0, "l_conv_pool_bn_bst0_1_ce0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_1_q0, "l_conv_pool_bn_bst0_1_q0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_4_address0, "l_conv_pool_bn_bst0_4_address0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_4_ce0, "l_conv_pool_bn_bst0_4_ce0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_4_q0, "l_conv_pool_bn_bst0_4_q0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_3_address0, "l_conv_pool_bn_bst0_3_address0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_3_ce0, "l_conv_pool_bn_bst0_3_ce0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_3_q0, "l_conv_pool_bn_bst0_3_q0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_5_address0, "l_conv_pool_bn_bst0_5_address0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_5_ce0, "l_conv_pool_bn_bst0_5_ce0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_5_q0, "l_conv_pool_bn_bst0_5_q0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_s_address0, "l_conv_pool_bn_bst0_s_address0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_s_ce0, "l_conv_pool_bn_bst0_s_ce0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_s_q0, "l_conv_pool_bn_bst0_s_q0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_6_address0, "l_b_linear_bn_softma_6_address0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_6_ce0, "l_b_linear_bn_softma_6_ce0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_6_q0, "l_b_linear_bn_softma_6_q0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_1_address0, "l_b_linear_bn_softma_1_address0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_1_ce0, "l_b_linear_bn_softma_1_ce0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_1_q0, "l_b_linear_bn_softma_1_q0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_4_address0, "l_b_linear_bn_softma_4_address0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_4_ce0, "l_b_linear_bn_softma_4_ce0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_4_q0, "l_b_linear_bn_softma_4_q0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_3_address0, "l_b_linear_bn_softma_3_address0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_3_ce0, "l_b_linear_bn_softma_3_ce0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_3_q0, "l_b_linear_bn_softma_3_q0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_5_address0, "l_b_linear_bn_softma_5_address0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_5_ce0, "l_b_linear_bn_softma_5_ce0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_5_q0, "l_b_linear_bn_softma_5_q0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_address0, "l_b_linear_bn_softma_address0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_ce0, "l_b_linear_bn_softma_ce0");
    sc_trace(mVcdFile, l_b_linear_bn_softma_q0, "l_b_linear_bn_softma_q0");
    sc_trace(mVcdFile, grp_fu_441_p2, "grp_fu_441_p2");
    sc_trace(mVcdFile, reg_461, "reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, i_fu_474_p2, "i_fu_474_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_2_i_fu_491_p2, "j_2_i_fu_491_p2");
    sc_trace(mVcdFile, j_2_i_reg_902, "j_2_i_reg_902");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_i_fu_485_p2, "exitcond_i_fu_485_p2");
    sc_trace(mVcdFile, f_idx_i_fu_506_p3, "f_idx_i_fu_506_p3");
    sc_trace(mVcdFile, f_idx_i_reg_932, "f_idx_i_reg_932");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_8_reg_937, "l_conv_pool_bn_bst0_8_reg_937");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_10_reg_942, "l_conv_pool_bn_bst0_10_reg_942");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_12_reg_947, "l_conv_pool_bn_bst0_12_reg_947");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_14_reg_952, "l_conv_pool_bn_bst0_14_reg_952");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_16_reg_957, "l_conv_pool_bn_bst0_16_reg_957");
    sc_trace(mVcdFile, tmp_17_i_fu_515_p2, "tmp_17_i_fu_515_p2");
    sc_trace(mVcdFile, tmp_17_i_reg_962, "tmp_17_i_reg_962");
    sc_trace(mVcdFile, next_mul_fu_521_p2, "next_mul_fu_521_p2");
    sc_trace(mVcdFile, next_mul_reg_967, "next_mul_reg_967");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, max_idx_i_i_cast5_fu_527_p1, "max_idx_i_i_cast5_fu_527_p1");
    sc_trace(mVcdFile, max_idx_i_i_cast5_reg_972, "max_idx_i_i_cast5_reg_972");
    sc_trace(mVcdFile, j_i_i_fu_537_p2, "j_i_i_fu_537_p2");
    sc_trace(mVcdFile, j_i_i_reg_980, "j_i_i_reg_980");
    sc_trace(mVcdFile, i_1_fu_554_p2, "i_1_fu_554_p2");
    sc_trace(mVcdFile, i_1_reg_988, "i_1_reg_988");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond_fu_548_p2, "exitcond_fu_548_p2");
    sc_trace(mVcdFile, tmp_30_fu_681_p4, "tmp_30_fu_681_p4");
    sc_trace(mVcdFile, tmp_30_reg_1008, "tmp_30_reg_1008");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_46_fu_715_p1, "tmp_46_fu_715_p1");
    sc_trace(mVcdFile, tmp_46_reg_1013, "tmp_46_reg_1013");
    sc_trace(mVcdFile, tmp_32_reg_1018, "tmp_32_reg_1018");
    sc_trace(mVcdFile, res_fu_782_p2, "res_fu_782_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_77_i_i_fu_788_p1, "tmp_77_i_i_fu_788_p1");
    sc_trace(mVcdFile, tmp_77_i_i_reg_1028, "tmp_77_i_i_reg_1028");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_453_p1, "grp_fu_453_p1");
    sc_trace(mVcdFile, res_i_i_reg_1041, "res_i_i_reg_1041");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, l_b_linear_bn_softma_9_reg_1046, "l_b_linear_bn_softma_9_reg_1046");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, l_b_linear_bn_softma_15_reg_1056, "l_b_linear_bn_softma_15_reg_1056");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, l_b_linear_bn_softma_17_reg_1066, "l_b_linear_bn_softma_17_reg_1066");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, l_b_linear_bn_softma_11_reg_1081, "l_b_linear_bn_softma_11_reg_1081");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, l_b_linear_bn_softma_13_reg_1086, "l_b_linear_bn_softma_13_reg_1086");
    sc_trace(mVcdFile, grp_fu_449_p2, "grp_fu_449_p2");
    sc_trace(mVcdFile, f_assign_6_reg_1091, "f_assign_6_reg_1091");
    sc_trace(mVcdFile, grp_fu_445_p2, "grp_fu_445_p2");
    sc_trace(mVcdFile, f_assign_7_reg_1096, "f_assign_7_reg_1096");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, tmp_25_fu_456_p2, "tmp_25_fu_456_p2");
    sc_trace(mVcdFile, tmp_25_reg_1101, "tmp_25_reg_1101");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, max_idx_2_i_i_fu_876_p3, "max_idx_2_i_i_fu_876_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, max_res_1_i_i_fu_883_p3, "max_res_1_i_i_fu_883_p3");
    sc_trace(mVcdFile, grp_fconv_fu_416_ap_start, "grp_fconv_fu_416_ap_start");
    sc_trace(mVcdFile, grp_fconv_fu_416_ap_done, "grp_fconv_fu_416_ap_done");
    sc_trace(mVcdFile, grp_fconv_fu_416_ap_idle, "grp_fconv_fu_416_ap_idle");
    sc_trace(mVcdFile, grp_fconv_fu_416_ap_ready, "grp_fconv_fu_416_ap_ready");
    sc_trace(mVcdFile, grp_fconv_fu_416_A_address0, "grp_fconv_fu_416_A_address0");
    sc_trace(mVcdFile, grp_fconv_fu_416_A_ce0, "grp_fconv_fu_416_A_ce0");
    sc_trace(mVcdFile, grp_fconv_fu_416_C_address0, "grp_fconv_fu_416_C_address0");
    sc_trace(mVcdFile, grp_fconv_fu_416_C_ce0, "grp_fconv_fu_416_C_ce0");
    sc_trace(mVcdFile, grp_fconv_fu_416_C_we0, "grp_fconv_fu_416_C_we0");
    sc_trace(mVcdFile, grp_fconv_fu_416_C_d0, "grp_fconv_fu_416_C_d0");
    sc_trace(mVcdFile, i_i_reg_310, "i_i_reg_310");
    sc_trace(mVcdFile, exitcond1_fu_468_p2, "exitcond1_fu_468_p2");
    sc_trace(mVcdFile, j_i_reg_321, "j_i_reg_321");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, c_idx_1_i_reg_333, "c_idx_1_i_reg_333");
    sc_trace(mVcdFile, max_idx_i_i_reg_345, "max_idx_i_i_reg_345");
    sc_trace(mVcdFile, max_idx_1_i_i_reg_357, "max_idx_1_i_i_reg_357");
    sc_trace(mVcdFile, max_res_i_i_reg_369, "max_res_i_i_reg_369");
    sc_trace(mVcdFile, phi_mul_reg_381, "phi_mul_reg_381");
    sc_trace(mVcdFile, i_i1_reg_393, "i_i1_reg_393");
    sc_trace(mVcdFile, exitcond_i_i_fu_531_p2, "exitcond_i_i_fu_531_p2");
    sc_trace(mVcdFile, res_i_reg_404, "res_i_reg_404");
    sc_trace(mVcdFile, ap_reg_grp_fconv_fu_416_ap_start, "ap_reg_grp_fconv_fu_416_ap_start");
    sc_trace(mVcdFile, tmp_14_i_fu_480_p1, "tmp_14_i_fu_480_p1");
    sc_trace(mVcdFile, tmp_16_i_fu_497_p1, "tmp_16_i_fu_497_p1");
    sc_trace(mVcdFile, tmp_35_i_fu_560_p1, "tmp_35_i_fu_560_p1");
    sc_trace(mVcdFile, sum3_i_cast_fu_575_p1, "sum3_i_cast_fu_575_p1");
    sc_trace(mVcdFile, grp_fu_441_p0, "grp_fu_441_p0");
    sc_trace(mVcdFile, grp_fu_441_p1, "grp_fu_441_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_453_p0, "grp_fu_453_p0");
    sc_trace(mVcdFile, tmp_35_i_cast_fu_565_p1, "tmp_35_i_cast_fu_565_p1");
    sc_trace(mVcdFile, sum3_i_fu_569_p2, "sum3_i_fu_569_p2");
    sc_trace(mVcdFile, tmp_38_i_fu_580_p3, "tmp_38_i_fu_580_p3");
    sc_trace(mVcdFile, res_3_fu_588_p2, "res_3_fu_588_p2");
    sc_trace(mVcdFile, tmp_fu_599_p2, "tmp_fu_599_p2");
    sc_trace(mVcdFile, v_assign_fu_605_p2, "v_assign_fu_605_p2");
    sc_trace(mVcdFile, tmp_38_fu_611_p3, "tmp_38_fu_611_p3");
    sc_trace(mVcdFile, tmp_42_fu_619_p3, "tmp_42_fu_619_p3");
    sc_trace(mVcdFile, tmp_44_fu_627_p3, "tmp_44_fu_627_p3");
    sc_trace(mVcdFile, tmp_45_fu_635_p3, "tmp_45_fu_635_p3");
    sc_trace(mVcdFile, tmp_3_i_i_fu_643_p8, "tmp_3_i_i_fu_643_p8");
    sc_trace(mVcdFile, tmp_3_i_i_cast_fu_661_p1, "tmp_3_i_i_cast_fu_661_p1");
    sc_trace(mVcdFile, c_fu_665_p2, "c_fu_665_p2");
    sc_trace(mVcdFile, tmp_29_fu_671_p4, "tmp_29_fu_671_p4");
    sc_trace(mVcdFile, tmp_6_i_i_fu_691_p4, "tmp_6_i_i_fu_691_p4");
    sc_trace(mVcdFile, tmp_31_fu_705_p4, "tmp_31_fu_705_p4");
    sc_trace(mVcdFile, tmp_7_i_i_fu_719_p4, "tmp_7_i_i_fu_719_p4");
    sc_trace(mVcdFile, tmp_6_i_i_cast_fu_701_p1, "tmp_6_i_i_cast_fu_701_p1");
    sc_trace(mVcdFile, tmp_7_i_i_cast_fu_729_p1, "tmp_7_i_i_cast_fu_729_p1");
    sc_trace(mVcdFile, c_1_fu_733_p2, "c_1_fu_733_p2");
    sc_trace(mVcdFile, tmp_27_fu_749_p3, "tmp_27_fu_749_p3");
    sc_trace(mVcdFile, tmp_28_fu_756_p3, "tmp_28_fu_756_p3");
    sc_trace(mVcdFile, tmp_i_i_cast_fu_769_p1, "tmp_i_i_cast_fu_769_p1");
    sc_trace(mVcdFile, tmp_9_i_i_cast3_fu_763_p2, "tmp_9_i_i_cast3_fu_763_p2");
    sc_trace(mVcdFile, tmp_1_i_i_fu_772_p2, "tmp_1_i_i_fu_772_p2");
    sc_trace(mVcdFile, tmp_2_i_i_cast_fu_778_p1, "tmp_2_i_i_cast_fu_778_p1");
    sc_trace(mVcdFile, f_assign_8_to_int_fu_793_p1, "f_assign_8_to_int_fu_793_p1");
    sc_trace(mVcdFile, max_res_i_i_to_int_fu_811_p1, "max_res_i_i_to_int_fu_811_p1");
    sc_trace(mVcdFile, tmp_s_fu_797_p4, "tmp_s_fu_797_p4");
    sc_trace(mVcdFile, tmp_36_fu_807_p1, "tmp_36_fu_807_p1");
    sc_trace(mVcdFile, notrhs_fu_835_p2, "notrhs_fu_835_p2");
    sc_trace(mVcdFile, notlhs_fu_829_p2, "notlhs_fu_829_p2");
    sc_trace(mVcdFile, tmp_21_fu_815_p4, "tmp_21_fu_815_p4");
    sc_trace(mVcdFile, tmp_37_fu_825_p1, "tmp_37_fu_825_p1");
    sc_trace(mVcdFile, notrhs1_fu_853_p2, "notrhs1_fu_853_p2");
    sc_trace(mVcdFile, notlhs1_fu_847_p2, "notlhs1_fu_847_p2");
    sc_trace(mVcdFile, tmp_22_fu_841_p2, "tmp_22_fu_841_p2");
    sc_trace(mVcdFile, tmp_23_fu_859_p2, "tmp_23_fu_859_p2");
    sc_trace(mVcdFile, tmp_24_fu_865_p2, "tmp_24_fu_865_p2");
    sc_trace(mVcdFile, tmp_26_fu_871_p2, "tmp_26_fu_871_p2");
    sc_trace(mVcdFile, grp_fu_441_opcode, "grp_fu_441_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("ebnn_compute.hdltvin.dat");
    mHdltvoutHandle.open("ebnn_compute.hdltvout.dat");
}

ebnn_compute::~ebnn_compute() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete temp1_U;
    delete l_conv_pool_bn_bst0_1_U;
    delete l_conv_pool_bn_bst0_4_U;
    delete l_conv_pool_bn_bst0_3_U;
    delete l_conv_pool_bn_bst0_5_U;
    delete l_conv_pool_bn_bst0_s_U;
    delete l_b_linear_bn_softma_6_U;
    delete l_b_linear_bn_softma_1_U;
    delete l_b_linear_bn_softma_4_U;
    delete l_b_linear_bn_softma_3_U;
    delete l_b_linear_bn_softma_5_U;
    delete l_b_linear_bn_softma_U;
    delete ebnn_compute_inputINT_s_axi_U;
    delete ebnn_compute_outputCONTRL_s_axi_U;
    delete ebnn_compute_outputINT_s_axi_U;
    delete grp_fconv_fu_416;
    delete ebnn_compute_fadddEe_U26;
    delete ebnn_compute_fmuleOg_U27;
    delete ebnn_compute_fdivfYi_U28;
    delete ebnn_compute_sitosc4_U29;
    delete ebnn_compute_fcmpg8j_U30;
}

void ebnn_compute::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void ebnn_compute::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void ebnn_compute::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_fconv_fu_416_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_reg_grp_fconv_fu_416_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_fconv_fu_416_ap_ready.read())) {
            ap_reg_grp_fconv_fu_416_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_468_p2.read()))) {
        c_idx_1_i_reg_333 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(grp_fconv_fu_416_ap_done.read(), ap_const_logic_1))) {
        c_idx_1_i_reg_333 = tmp_17_i_reg_962.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_531_p2.read()))) {
        i_i1_reg_393 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_i1_reg_393 = i_1_reg_988.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_468_p2.read()))) {
        i_i_reg_310 = i_fu_474_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_i_reg_310 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_468_p2.read()))) {
        j_i_reg_321 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(grp_fconv_fu_416_ap_done.read(), ap_const_logic_1))) {
        j_i_reg_321 = j_2_i_reg_902.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_485_p2.read(), ap_const_lv1_1))) {
        max_idx_i_i_reg_345 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        max_idx_i_i_reg_345 = j_i_i_reg_980.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_485_p2.read(), ap_const_lv1_1))) {
        max_res_i_i_reg_369 = ap_const_lv32_FF7FFFFF;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        max_res_i_i_reg_369 = max_res_1_i_i_fu_883_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_485_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_381 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        phi_mul_reg_381 = next_mul_reg_967.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_531_p2.read()))) {
        res_i_reg_404 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        res_i_reg_404 = res_fu_782_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        f_assign_6_reg_1091 = grp_fu_449_p2.read();
        l_b_linear_bn_softma_11_reg_1081 = l_b_linear_bn_softma_4_q0.read();
        l_b_linear_bn_softma_13_reg_1086 = l_b_linear_bn_softma_3_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        f_assign_7_reg_1096 = grp_fu_445_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        f_idx_i_reg_932 = f_idx_i_fu_506_p3.read();
        l_conv_pool_bn_bst0_10_reg_942 = l_conv_pool_bn_bst0_4_q0.read();
        l_conv_pool_bn_bst0_12_reg_947 = l_conv_pool_bn_bst0_3_q0.read();
        l_conv_pool_bn_bst0_14_reg_952 = l_conv_pool_bn_bst0_5_q0.read();
        l_conv_pool_bn_bst0_16_reg_957 = l_conv_pool_bn_bst0_s_q0.read();
        l_conv_pool_bn_bst0_8_reg_937 = l_conv_pool_bn_bst0_1_q0.read();
        tmp_17_i_reg_962 = tmp_17_i_fu_515_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_1_reg_988 = i_1_fu_554_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_2_i_reg_902 = j_2_i_fu_491_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_i_i_reg_980 = j_i_i_fu_537_p2.read();
        max_idx_i_i_cast5_reg_972 = max_idx_i_i_cast5_fu_527_p1.read();
        next_mul_reg_967 = next_mul_fu_521_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        l_b_linear_bn_softma_15_reg_1056 = l_b_linear_bn_softma_5_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        l_b_linear_bn_softma_17_reg_1066 = l_b_linear_bn_softma_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        l_b_linear_bn_softma_9_reg_1046 = l_b_linear_bn_softma_1_q0.read();
        res_i_i_reg_1041 = grp_fu_453_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        max_idx_1_i_i_reg_357 = max_idx_2_i_i_fu_876_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
        reg_461 = grp_fu_441_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        tmp_25_reg_1101 = tmp_25_fu_456_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_30_reg_1008 = c_fu_665_p2.read().range(3, 2);
        tmp_32_reg_1018 = c_1_fu_733_p2.read().range(6, 4);
        tmp_46_reg_1013 = tmp_46_fu_715_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        tmp_77_i_i_reg_1028 = tmp_77_i_i_fu_788_p1.read();
    }
}

void ebnn_compute::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ebnn_compute::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void ebnn_compute::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void ebnn_compute::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void ebnn_compute::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void ebnn_compute::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void ebnn_compute::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ebnn_compute::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void ebnn_compute::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void ebnn_compute::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void ebnn_compute::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void ebnn_compute::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void ebnn_compute::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void ebnn_compute::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void ebnn_compute::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void ebnn_compute::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void ebnn_compute::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void ebnn_compute::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void ebnn_compute::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void ebnn_compute::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void ebnn_compute::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void ebnn_compute::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void ebnn_compute::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void ebnn_compute::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void ebnn_compute::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void ebnn_compute::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void ebnn_compute::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_i_fu_531_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ebnn_compute::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ebnn_compute::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_i_fu_531_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ebnn_compute::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void ebnn_compute::thread_c_1_fu_733_p2() {
    c_1_fu_733_p2 = (!tmp_6_i_i_cast_fu_701_p1.read().is_01() || !tmp_7_i_i_cast_fu_729_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_6_i_i_cast_fu_701_p1.read()) + sc_biguint<7>(tmp_7_i_i_cast_fu_729_p1.read()));
}

void ebnn_compute::thread_c_fu_665_p2() {
    c_fu_665_p2 = (!v_assign_fu_605_p2.read().is_01() || !tmp_3_i_i_cast_fu_661_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(v_assign_fu_605_p2.read()) - sc_biguint<8>(tmp_3_i_i_cast_fu_661_p1.read()));
}

void ebnn_compute::thread_exitcond1_fu_468_p2() {
    exitcond1_fu_468_p2 = (!i_i_reg_310.read().is_01() || !ap_const_lv6_2D.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_310.read() == ap_const_lv6_2D);
}

void ebnn_compute::thread_exitcond_fu_548_p2() {
    exitcond_fu_548_p2 = (!i_i1_reg_393.read().is_01() || !ap_const_lv6_2D.is_01())? sc_lv<1>(): sc_lv<1>(i_i1_reg_393.read() == ap_const_lv6_2D);
}

void ebnn_compute::thread_exitcond_i_fu_485_p2() {
    exitcond_i_fu_485_p2 = (!j_i_reg_321.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_321.read() == ap_const_lv4_A);
}

void ebnn_compute::thread_exitcond_i_i_fu_531_p2() {
    exitcond_i_i_fu_531_p2 = (!max_idx_i_i_reg_345.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(max_idx_i_i_reg_345.read() == ap_const_lv4_A);
}

void ebnn_compute::thread_f_assign_8_to_int_fu_793_p1() {
    f_assign_8_to_int_fu_793_p1 = reg_461.read();
}

void ebnn_compute::thread_f_idx_i_fu_506_p3() {
    f_idx_i_fu_506_p3 = esl_concat<4,1>(j_i_reg_321.read(), ap_const_lv1_0);
}

void ebnn_compute::thread_grp_fconv_fu_416_ap_start() {
    grp_fconv_fu_416_ap_start = ap_reg_grp_fconv_fu_416_ap_start.read();
}

void ebnn_compute::thread_grp_fu_441_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_441_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        grp_fu_441_opcode = ap_const_lv2_0;
    } else {
        grp_fu_441_opcode = "XX";
    }
}

void ebnn_compute::thread_grp_fu_441_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_441_p0 = f_assign_7_reg_1096.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_441_p0 = reg_461.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_441_p0 = res_i_i_reg_1041.read();
    } else {
        grp_fu_441_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ebnn_compute::thread_grp_fu_441_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_441_p1 = l_b_linear_bn_softma_13_reg_1086.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_441_p1 = l_b_linear_bn_softma_15_reg_1056.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_441_p1 = l_b_linear_bn_softma_9_reg_1046.read();
    } else {
        grp_fu_441_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void ebnn_compute::thread_grp_fu_453_p0() {
    grp_fu_453_p0 = esl_sext<32,11>(res_3_fu_588_p2.read());
}

void ebnn_compute::thread_i_1_fu_554_p2() {
    i_1_fu_554_p2 = (!i_i1_reg_393.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i1_reg_393.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void ebnn_compute::thread_i_fu_474_p2() {
    i_fu_474_p2 = (!i_i_reg_310.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i_reg_310.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void ebnn_compute::thread_j_2_i_fu_491_p2() {
    j_2_i_fu_491_p2 = (!j_i_reg_321.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_i_reg_321.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void ebnn_compute::thread_j_i_i_fu_537_p2() {
    j_i_i_fu_537_p2 = (!max_idx_i_i_reg_345.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(max_idx_i_i_reg_345.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void ebnn_compute::thread_l_b_linear_bn_softma_1_address0() {
    l_b_linear_bn_softma_1_address0 =  (sc_lv<4>) (tmp_77_i_i_fu_788_p1.read());
}

void ebnn_compute::thread_l_b_linear_bn_softma_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        l_b_linear_bn_softma_1_ce0 = ap_const_logic_1;
    } else {
        l_b_linear_bn_softma_1_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_b_linear_bn_softma_3_address0() {
    l_b_linear_bn_softma_3_address0 =  (sc_lv<4>) (tmp_77_i_i_reg_1028.read());
}

void ebnn_compute::thread_l_b_linear_bn_softma_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        l_b_linear_bn_softma_3_ce0 = ap_const_logic_1;
    } else {
        l_b_linear_bn_softma_3_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_b_linear_bn_softma_4_address0() {
    l_b_linear_bn_softma_4_address0 =  (sc_lv<4>) (tmp_77_i_i_reg_1028.read());
}

void ebnn_compute::thread_l_b_linear_bn_softma_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        l_b_linear_bn_softma_4_ce0 = ap_const_logic_1;
    } else {
        l_b_linear_bn_softma_4_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_b_linear_bn_softma_5_address0() {
    l_b_linear_bn_softma_5_address0 =  (sc_lv<4>) (tmp_77_i_i_reg_1028.read());
}

void ebnn_compute::thread_l_b_linear_bn_softma_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        l_b_linear_bn_softma_5_ce0 = ap_const_logic_1;
    } else {
        l_b_linear_bn_softma_5_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_b_linear_bn_softma_6_address0() {
    l_b_linear_bn_softma_6_address0 =  (sc_lv<9>) (sum3_i_cast_fu_575_p1.read());
}

void ebnn_compute::thread_l_b_linear_bn_softma_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        l_b_linear_bn_softma_6_ce0 = ap_const_logic_1;
    } else {
        l_b_linear_bn_softma_6_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_b_linear_bn_softma_address0() {
    l_b_linear_bn_softma_address0 =  (sc_lv<4>) (tmp_77_i_i_reg_1028.read());
}

void ebnn_compute::thread_l_b_linear_bn_softma_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        l_b_linear_bn_softma_ce0 = ap_const_logic_1;
    } else {
        l_b_linear_bn_softma_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_1_address0() {
    l_conv_pool_bn_bst0_1_address0 =  (sc_lv<4>) (tmp_16_i_fu_497_p1.read());
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l_conv_pool_bn_bst0_1_ce0 = ap_const_logic_1;
    } else {
        l_conv_pool_bn_bst0_1_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_3_address0() {
    l_conv_pool_bn_bst0_3_address0 =  (sc_lv<4>) (tmp_16_i_fu_497_p1.read());
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l_conv_pool_bn_bst0_3_ce0 = ap_const_logic_1;
    } else {
        l_conv_pool_bn_bst0_3_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_4_address0() {
    l_conv_pool_bn_bst0_4_address0 =  (sc_lv<4>) (tmp_16_i_fu_497_p1.read());
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l_conv_pool_bn_bst0_4_ce0 = ap_const_logic_1;
    } else {
        l_conv_pool_bn_bst0_4_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_5_address0() {
    l_conv_pool_bn_bst0_5_address0 =  (sc_lv<4>) (tmp_16_i_fu_497_p1.read());
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l_conv_pool_bn_bst0_5_ce0 = ap_const_logic_1;
    } else {
        l_conv_pool_bn_bst0_5_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_s_address0() {
    l_conv_pool_bn_bst0_s_address0 =  (sc_lv<4>) (tmp_16_i_fu_497_p1.read());
}

void ebnn_compute::thread_l_conv_pool_bn_bst0_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        l_conv_pool_bn_bst0_s_ce0 = ap_const_logic_1;
    } else {
        l_conv_pool_bn_bst0_s_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_max_idx_2_i_i_fu_876_p3() {
    max_idx_2_i_i_fu_876_p3 = (!tmp_26_fu_871_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_26_fu_871_p2.read()[0].to_bool())? max_idx_i_i_cast5_reg_972.read(): max_idx_1_i_i_reg_357.read());
}

void ebnn_compute::thread_max_idx_i_i_cast5_fu_527_p1() {
    max_idx_i_i_cast5_fu_527_p1 = esl_zext<32,4>(max_idx_i_i_reg_345.read());
}

void ebnn_compute::thread_max_res_1_i_i_fu_883_p3() {
    max_res_1_i_i_fu_883_p3 = (!tmp_26_fu_871_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_26_fu_871_p2.read()[0].to_bool())? reg_461.read(): max_res_i_i_reg_369.read());
}

void ebnn_compute::thread_max_res_i_i_to_int_fu_811_p1() {
    max_res_i_i_to_int_fu_811_p1 = max_res_i_i_reg_369.read();
}

void ebnn_compute::thread_next_mul_fu_521_p2() {
    next_mul_fu_521_p2 = (!phi_mul_reg_381.read().is_01() || !ap_const_lv9_2D.is_01())? sc_lv<9>(): (sc_biguint<9>(phi_mul_reg_381.read()) + sc_biguint<9>(ap_const_lv9_2D));
}

void ebnn_compute::thread_notlhs1_fu_847_p2() {
    notlhs1_fu_847_p2 = (!tmp_21_fu_815_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_21_fu_815_p4.read() != ap_const_lv8_FF);
}

void ebnn_compute::thread_notlhs_fu_829_p2() {
    notlhs_fu_829_p2 = (!tmp_s_fu_797_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_s_fu_797_p4.read() != ap_const_lv8_FF);
}

void ebnn_compute::thread_notrhs1_fu_853_p2() {
    notrhs1_fu_853_p2 = (!tmp_37_fu_825_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_37_fu_825_p1.read() == ap_const_lv23_0);
}

void ebnn_compute::thread_notrhs_fu_835_p2() {
    notrhs_fu_835_p2 = (!tmp_36_fu_807_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_36_fu_807_p1.read() == ap_const_lv23_0);
}

void ebnn_compute::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<5>) (ap_const_lv64_0);
}

void ebnn_compute::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_output_r_d0() {
    output_r_d0 = max_idx_1_i_i_reg_357.read().range(8-1, 0);
}

void ebnn_compute::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_i_fu_531_p2.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_res_3_fu_588_p2() {
    res_3_fu_588_p2 = (!ap_const_lv11_698.is_01() || !tmp_38_i_fu_580_p3.read().is_01())? sc_lv<11>(): (sc_bigint<11>(ap_const_lv11_698) + sc_biguint<11>(tmp_38_i_fu_580_p3.read()));
}

void ebnn_compute::thread_res_fu_782_p2() {
    res_fu_782_p2 = (!tmp_2_i_i_cast_fu_778_p1.read().is_01() || !res_i_reg_404.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_2_i_i_cast_fu_778_p1.read()) + sc_biguint<10>(res_i_reg_404.read()));
}

void ebnn_compute::thread_sum3_i_cast_fu_575_p1() {
    sum3_i_cast_fu_575_p1 = esl_zext<64,9>(sum3_i_fu_569_p2.read());
}

void ebnn_compute::thread_sum3_i_fu_569_p2() {
    sum3_i_fu_569_p2 = (!tmp_35_i_cast_fu_565_p1.read().is_01() || !phi_mul_reg_381.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_35_i_cast_fu_565_p1.read()) + sc_biguint<9>(phi_mul_reg_381.read()));
}

void ebnn_compute::thread_temp1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp1_address0 =  (sc_lv<7>) (tmp_35_i_fu_560_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        temp1_address0 =  (sc_lv<7>) (tmp_14_i_fu_480_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        temp1_address0 = grp_fconv_fu_416_C_address0.read();
    } else {
        temp1_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void ebnn_compute::thread_temp1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        temp1_ce0 = grp_fconv_fu_416_C_ce0.read();
    } else {
        temp1_ce0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_temp1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        temp1_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        temp1_d0 = grp_fconv_fu_416_C_d0.read();
    } else {
        temp1_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void ebnn_compute::thread_temp1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_468_p2.read()))) {
        temp1_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        temp1_we0 = grp_fconv_fu_416_C_we0.read();
    } else {
        temp1_we0 = ap_const_logic_0;
    }
}

void ebnn_compute::thread_tmp_14_i_fu_480_p1() {
    tmp_14_i_fu_480_p1 = esl_zext<64,6>(i_i_reg_310.read());
}

void ebnn_compute::thread_tmp_16_i_fu_497_p1() {
    tmp_16_i_fu_497_p1 = esl_zext<64,4>(j_i_reg_321.read());
}

void ebnn_compute::thread_tmp_17_i_fu_515_p2() {
    tmp_17_i_fu_515_p2 = (!c_idx_1_i_reg_333.read().is_01() || !ap_const_lv9_24.is_01())? sc_lv<9>(): (sc_biguint<9>(c_idx_1_i_reg_333.read()) + sc_biguint<9>(ap_const_lv9_24));
}

void ebnn_compute::thread_tmp_1_i_i_fu_772_p2() {
    tmp_1_i_i_fu_772_p2 = (!tmp_i_i_cast_fu_769_p1.read().is_01() || !tmp_9_i_i_cast3_fu_763_p2.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_i_i_cast_fu_769_p1.read()) + sc_biguint<4>(tmp_9_i_i_cast3_fu_763_p2.read()));
}

void ebnn_compute::thread_tmp_21_fu_815_p4() {
    tmp_21_fu_815_p4 = max_res_i_i_to_int_fu_811_p1.read().range(30, 23);
}

void ebnn_compute::thread_tmp_22_fu_841_p2() {
    tmp_22_fu_841_p2 = (notrhs_fu_835_p2.read() | notlhs_fu_829_p2.read());
}

void ebnn_compute::thread_tmp_23_fu_859_p2() {
    tmp_23_fu_859_p2 = (notrhs1_fu_853_p2.read() | notlhs1_fu_847_p2.read());
}

void ebnn_compute::thread_tmp_24_fu_865_p2() {
    tmp_24_fu_865_p2 = (tmp_22_fu_841_p2.read() & tmp_23_fu_859_p2.read());
}

void ebnn_compute::thread_tmp_26_fu_871_p2() {
    tmp_26_fu_871_p2 = (tmp_24_fu_865_p2.read() & tmp_25_reg_1101.read());
}

void ebnn_compute::thread_tmp_27_fu_749_p3() {
    tmp_27_fu_749_p3 = esl_concat<2,2>(ap_const_lv2_0, tmp_46_reg_1013.read());
}

void ebnn_compute::thread_tmp_28_fu_756_p3() {
    tmp_28_fu_756_p3 = esl_concat<2,2>(ap_const_lv2_0, tmp_30_reg_1008.read());
}

void ebnn_compute::thread_tmp_29_fu_671_p4() {
    tmp_29_fu_671_p4 = c_fu_665_p2.read().range(7, 6);
}

void ebnn_compute::thread_tmp_2_i_i_cast_fu_778_p1() {
    tmp_2_i_i_cast_fu_778_p1 = esl_zext<10,4>(tmp_1_i_i_fu_772_p2.read());
}

void ebnn_compute::thread_tmp_30_fu_681_p4() {
    tmp_30_fu_681_p4 = c_fu_665_p2.read().range(3, 2);
}

void ebnn_compute::thread_tmp_31_fu_705_p4() {
    tmp_31_fu_705_p4 = c_fu_665_p2.read().range(5, 4);
}

void ebnn_compute::thread_tmp_35_i_cast_fu_565_p1() {
    tmp_35_i_cast_fu_565_p1 = esl_zext<9,6>(i_i1_reg_393.read());
}

void ebnn_compute::thread_tmp_35_i_fu_560_p1() {
    tmp_35_i_fu_560_p1 = esl_zext<64,6>(i_i1_reg_393.read());
}

void ebnn_compute::thread_tmp_36_fu_807_p1() {
    tmp_36_fu_807_p1 = f_assign_8_to_int_fu_793_p1.read().range(23-1, 0);
}

void ebnn_compute::thread_tmp_37_fu_825_p1() {
    tmp_37_fu_825_p1 = max_res_i_i_to_int_fu_811_p1.read().range(23-1, 0);
}

void ebnn_compute::thread_tmp_38_fu_611_p3() {
    tmp_38_fu_611_p3 = v_assign_fu_605_p2.read().range(7, 7);
}

void ebnn_compute::thread_tmp_38_i_fu_580_p3() {
    tmp_38_i_fu_580_p3 = esl_concat<10,1>(res_i_reg_404.read(), ap_const_lv1_0);
}

void ebnn_compute::thread_tmp_3_i_i_cast_fu_661_p1() {
    tmp_3_i_i_cast_fu_661_p1 = esl_zext<8,7>(tmp_3_i_i_fu_643_p8.read());
}

void ebnn_compute::thread_tmp_3_i_i_fu_643_p8() {
    tmp_3_i_i_fu_643_p8 = esl_concat<6,1>(esl_concat<5,1>(esl_concat<4,1>(esl_concat<3,1>(esl_concat<2,1>(esl_concat<1,1>(tmp_38_fu_611_p3.read(), ap_const_lv1_0), tmp_42_fu_619_p3.read()), ap_const_lv1_0), tmp_44_fu_627_p3.read()), ap_const_lv1_0), tmp_45_fu_635_p3.read());
}

void ebnn_compute::thread_tmp_42_fu_619_p3() {
    tmp_42_fu_619_p3 = v_assign_fu_605_p2.read().range(5, 5);
}

void ebnn_compute::thread_tmp_44_fu_627_p3() {
    tmp_44_fu_627_p3 = v_assign_fu_605_p2.read().range(3, 3);
}

void ebnn_compute::thread_tmp_45_fu_635_p3() {
    tmp_45_fu_635_p3 = v_assign_fu_605_p2.read().range(1, 1);
}

void ebnn_compute::thread_tmp_46_fu_715_p1() {
    tmp_46_fu_715_p1 = c_fu_665_p2.read().range(2-1, 0);
}

void ebnn_compute::thread_tmp_6_i_i_cast_fu_701_p1() {
    tmp_6_i_i_cast_fu_701_p1 = esl_zext<7,6>(tmp_6_i_i_fu_691_p4.read());
}

void ebnn_compute::thread_tmp_6_i_i_fu_691_p4() {
    tmp_6_i_i_fu_691_p4 = esl_concat<4,2>(esl_concat<2,2>(tmp_29_fu_671_p4.read(), ap_const_lv2_0), tmp_30_fu_681_p4.read());
}

void ebnn_compute::thread_tmp_77_i_i_fu_788_p1() {
    tmp_77_i_i_fu_788_p1 = esl_zext<64,4>(max_idx_i_i_reg_345.read());
}

void ebnn_compute::thread_tmp_7_i_i_cast_fu_729_p1() {
    tmp_7_i_i_cast_fu_729_p1 = esl_zext<7,6>(tmp_7_i_i_fu_719_p4.read());
}

void ebnn_compute::thread_tmp_7_i_i_fu_719_p4() {
    tmp_7_i_i_fu_719_p4 = esl_concat<4,2>(esl_concat<2,2>(tmp_31_fu_705_p4.read(), ap_const_lv2_0), tmp_46_fu_715_p1.read());
}

void ebnn_compute::thread_tmp_9_i_i_cast3_fu_763_p2() {
    tmp_9_i_i_cast3_fu_763_p2 = (!tmp_27_fu_749_p3.read().is_01() || !tmp_28_fu_756_p3.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_27_fu_749_p3.read()) + sc_biguint<4>(tmp_28_fu_756_p3.read()));
}

void ebnn_compute::thread_tmp_fu_599_p2() {
    tmp_fu_599_p2 = (l_b_linear_bn_softma_6_q0.read() ^ ap_const_lv8_FF);
}

void ebnn_compute::thread_tmp_i_i_cast_fu_769_p1() {
    tmp_i_i_cast_fu_769_p1 = esl_zext<4,3>(tmp_32_reg_1018.read());
}

void ebnn_compute::thread_tmp_s_fu_797_p4() {
    tmp_s_fu_797_p4 = f_assign_8_to_int_fu_793_p1.read().range(30, 23);
}

void ebnn_compute::thread_v_assign_fu_605_p2() {
    v_assign_fu_605_p2 = (temp1_q0.read() ^ tmp_fu_599_p2.read());
}

void ebnn_compute::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_468_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_i_fu_485_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_fconv_fu_416_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_i_fu_531_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond_fu_548_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<51>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void ebnn_compute::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_inputINT_AWVALID\" :  \"" << s_axi_inputINT_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_inputINT_AWREADY\" :  \"" << s_axi_inputINT_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_inputINT_AWADDR\" :  \"" << s_axi_inputINT_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_inputINT_WVALID\" :  \"" << s_axi_inputINT_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_inputINT_WREADY\" :  \"" << s_axi_inputINT_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_inputINT_WDATA\" :  \"" << s_axi_inputINT_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_inputINT_WSTRB\" :  \"" << s_axi_inputINT_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_inputINT_ARVALID\" :  \"" << s_axi_inputINT_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_inputINT_ARREADY\" :  \"" << s_axi_inputINT_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_inputINT_ARADDR\" :  \"" << s_axi_inputINT_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_inputINT_RVALID\" :  \"" << s_axi_inputINT_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_inputINT_RREADY\" :  \"" << s_axi_inputINT_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_inputINT_RDATA\" :  \"" << s_axi_inputINT_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_inputINT_RRESP\" :  \"" << s_axi_inputINT_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_inputINT_BVALID\" :  \"" << s_axi_inputINT_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_inputINT_BREADY\" :  \"" << s_axi_inputINT_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_inputINT_BRESP\" :  \"" << s_axi_inputINT_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputCONTRL_AWVALID\" :  \"" << s_axi_outputCONTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputCONTRL_AWREADY\" :  \"" << s_axi_outputCONTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputCONTRL_AWADDR\" :  \"" << s_axi_outputCONTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputCONTRL_WVALID\" :  \"" << s_axi_outputCONTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputCONTRL_WREADY\" :  \"" << s_axi_outputCONTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputCONTRL_WDATA\" :  \"" << s_axi_outputCONTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputCONTRL_WSTRB\" :  \"" << s_axi_outputCONTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputCONTRL_ARVALID\" :  \"" << s_axi_outputCONTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputCONTRL_ARREADY\" :  \"" << s_axi_outputCONTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputCONTRL_ARADDR\" :  \"" << s_axi_outputCONTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputCONTRL_RVALID\" :  \"" << s_axi_outputCONTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputCONTRL_RREADY\" :  \"" << s_axi_outputCONTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputCONTRL_RDATA\" :  \"" << s_axi_outputCONTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputCONTRL_RRESP\" :  \"" << s_axi_outputCONTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputCONTRL_BVALID\" :  \"" << s_axi_outputCONTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputCONTRL_BREADY\" :  \"" << s_axi_outputCONTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputCONTRL_BRESP\" :  \"" << s_axi_outputCONTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputINT_AWVALID\" :  \"" << s_axi_outputINT_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputINT_AWREADY\" :  \"" << s_axi_outputINT_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputINT_AWADDR\" :  \"" << s_axi_outputINT_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputINT_WVALID\" :  \"" << s_axi_outputINT_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputINT_WREADY\" :  \"" << s_axi_outputINT_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputINT_WDATA\" :  \"" << s_axi_outputINT_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputINT_WSTRB\" :  \"" << s_axi_outputINT_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputINT_ARVALID\" :  \"" << s_axi_outputINT_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputINT_ARREADY\" :  \"" << s_axi_outputINT_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputINT_ARADDR\" :  \"" << s_axi_outputINT_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputINT_RVALID\" :  \"" << s_axi_outputINT_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputINT_RREADY\" :  \"" << s_axi_outputINT_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputINT_RDATA\" :  \"" << s_axi_outputINT_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputINT_RRESP\" :  \"" << s_axi_outputINT_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputINT_BVALID\" :  \"" << s_axi_outputINT_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outputINT_BREADY\" :  \"" << s_axi_outputINT_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outputINT_BRESP\" :  \"" << s_axi_outputINT_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

