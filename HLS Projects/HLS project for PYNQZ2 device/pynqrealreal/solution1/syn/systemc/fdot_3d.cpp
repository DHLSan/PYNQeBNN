// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fdot_3d.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fdot_3d::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fdot_3d::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> fdot_3d::ap_ST_fsm_state1 = "1";
const sc_lv<11> fdot_3d::ap_ST_fsm_state2 = "10";
const sc_lv<11> fdot_3d::ap_ST_fsm_state3 = "100";
const sc_lv<11> fdot_3d::ap_ST_fsm_state4 = "1000";
const sc_lv<11> fdot_3d::ap_ST_fsm_state5 = "10000";
const sc_lv<11> fdot_3d::ap_ST_fsm_state6 = "100000";
const sc_lv<11> fdot_3d::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> fdot_3d::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> fdot_3d::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> fdot_3d::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> fdot_3d::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> fdot_3d::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fdot_3d::ap_const_lv32_1 = "1";
const sc_lv<1> fdot_3d::ap_const_lv1_1 = "1";
const sc_lv<32> fdot_3d::ap_const_lv32_2 = "10";
const sc_lv<1> fdot_3d::ap_const_lv1_0 = "0";
const sc_lv<32> fdot_3d::ap_const_lv32_3 = "11";
const sc_lv<32> fdot_3d::ap_const_lv32_4 = "100";
const sc_lv<32> fdot_3d::ap_const_lv32_5 = "101";
const sc_lv<32> fdot_3d::ap_const_lv32_9 = "1001";
const sc_lv<32> fdot_3d::ap_const_lv32_A = "1010";
const sc_lv<32> fdot_3d::ap_const_lv32_1F = "11111";
const sc_lv<32> fdot_3d::ap_const_lv32_8 = "1000";
const sc_lv<6> fdot_3d::ap_const_lv6_0 = "000000";
const sc_lv<29> fdot_3d::ap_const_lv29_0 = "00000000000000000000000000000";
const sc_lv<8> fdot_3d::ap_const_lv8_0 = "00000000";
const sc_lv<32> fdot_3d::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const bool fdot_3d::ap_const_boolean_1 = true;

fdot_3d::fdot_3d(sc_module_name name) : sc_module(name), mVcdFile(0) {
    l_conv_pool_bn_bst0_6_U = new fdot_3d_l_conv_pobkb("l_conv_pool_bn_bst0_6_U");
    l_conv_pool_bn_bst0_6_U->clk(ap_clk);
    l_conv_pool_bn_bst0_6_U->reset(ap_rst);
    l_conv_pool_bn_bst0_6_U->address0(l_conv_pool_bn_bst0_6_address0);
    l_conv_pool_bn_bst0_6_U->ce0(l_conv_pool_bn_bst0_6_ce0);
    l_conv_pool_bn_bst0_6_U->q0(l_conv_pool_bn_bst0_6_q0);
    bits_U = new fdot_3d_bits("bits_U");
    bits_U->clk(ap_clk);
    bits_U->reset(ap_rst);
    bits_U->address0(bits_address0);
    bits_U->ce0(bits_ce0);
    bits_U->q0(bits_q0);
    ebnn_compute_faddcud_U1 = new ebnn_compute_faddcud<1,5,32,32,32>("ebnn_compute_faddcud_U1");
    ebnn_compute_faddcud_U1->clk(ap_clk);
    ebnn_compute_faddcud_U1->reset(ap_rst);
    ebnn_compute_faddcud_U1->din0(res_1_fu_56);
    ebnn_compute_faddcud_U1->din1(tmp_9_reg_506);
    ebnn_compute_faddcud_U1->ce(ap_var_for_const0);
    ebnn_compute_faddcud_U1->dout(grp_fu_156_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_fu_224_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_offset_cast_fu_176_p1);
    sensitive << ( B_offset );

    SC_METHOD(thread_a1_fu_316_p3);
    sensitive << ( A_q0 );
    sensitive << ( tmp_6_fu_308_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_185_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_185_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_185_p2 );
    sensitive << ( res_1_fu_56 );

    SC_METHOD(thread_bits_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_4_i_fu_355_p1 );

    SC_METHOD(thread_bits_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_j_1_fu_296_p2);
    sensitive << ( i_assign_reg_114 );

    SC_METHOD(thread_k_1_fu_360_p2);
    sensitive << ( j_assign_reg_136 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_6_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_i_cast_fu_324_p1 );

    SC_METHOD(thread_l_conv_pool_bn_bst0_6_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_p_and_f_fu_328_p3);
    sensitive << ( tmp_11_reg_465 );

    SC_METHOD(thread_p_and_t_fu_335_p3);
    sensitive << ( tmp_12_reg_470 );

    SC_METHOD(thread_p_lshr_f_i_cast_fu_259_p4);
    sensitive << ( n_assign_reg_146 );

    SC_METHOD(thread_p_lshr_i_cast_fu_243_p4);
    sensitive << ( p_neg_i_fu_237_p2 );

    SC_METHOD(thread_p_neg_i_fu_237_p2);
    sensitive << ( n_assign_reg_146 );

    SC_METHOD(thread_p_neg_t_fu_342_p2);
    sensitive << ( p_and_t_fu_335_p3 );

    SC_METHOD(thread_p_neg_t_i_fu_253_p2);
    sensitive << ( p_lshr_i_cast_fu_243_p4 );

    SC_METHOD(thread_sum_i_cast_fu_324_p1);
    sensitive << ( sum_i_reg_460 );

    SC_METHOD(thread_sum_i_fu_277_p2);
    sensitive << ( B_offset_cast_reg_429 );
    sensitive << ( tmp_i_fu_269_p3 );

    SC_METHOD(thread_tmp_10_fu_229_p3);
    sensitive << ( n_assign_reg_146 );

    SC_METHOD(thread_tmp_11_fu_282_p1);
    sensitive << ( n_assign_reg_146 );

    SC_METHOD(thread_tmp_12_fu_286_p1);
    sensitive << ( p_neg_i_fu_237_p2 );

    SC_METHOD(thread_tmp_1_fu_190_p2);
    sensitive << ( b_idx_1_reg_124 );

    SC_METHOD(thread_tmp_2_fu_196_p2);
    sensitive << ( i_assign_reg_114 );

    SC_METHOD(thread_tmp_37_neg_fu_381_p2);
    sensitive << ( tmp_37_to_int_fu_378_p1 );

    SC_METHOD(thread_tmp_37_to_int_fu_378_p1);
    sensitive << ( a1_reg_485 );

    SC_METHOD(thread_tmp_3_fu_290_p2);
    sensitive << ( n_assign_reg_146 );

    SC_METHOD(thread_tmp_3_i_fu_348_p3);
    sensitive << ( tmp_10_reg_455 );
    sensitive << ( p_neg_t_fu_342_p2 );
    sensitive << ( p_and_f_fu_328_p3 );

    SC_METHOD(thread_tmp_4_fu_214_p2);
    sensitive << ( y_kh_reg_424 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_assign_reg_136 );

    SC_METHOD(thread_tmp_4_i_fu_355_p1);
    sensitive << ( tmp_3_i_fu_348_p3 );

    SC_METHOD(thread_tmp_5_fu_202_p2);
    sensitive << ( i_assign_reg_114 );

    SC_METHOD(thread_tmp_5_i_fu_366_p2);
    sensitive << ( l_conv_pool_bn_bst0_6_q0 );
    sensitive << ( bits_q0 );

    SC_METHOD(thread_tmp_6_fu_308_p3);
    sensitive << ( tmp_fu_302_p2 );

    SC_METHOD(thread_tmp_6_i_fu_372_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_5_i_fu_366_p2 );

    SC_METHOD(thread_tmp_7_fu_224_p1);
    sensitive << ( tmp_i2_fu_219_p2 );

    SC_METHOD(thread_tmp_8_fu_387_p1);
    sensitive << ( tmp_37_neg_fu_381_p2 );

    SC_METHOD(thread_tmp_9_fu_391_p3);
    sensitive << ( a1_reg_485 );
    sensitive << ( tmp_6_i_fu_372_p2 );
    sensitive << ( tmp_8_fu_387_p1 );

    SC_METHOD(thread_tmp_fu_302_p2);
    sensitive << ( i_assign_reg_114 );
    sensitive << ( j_assign_reg_136 );

    SC_METHOD(thread_tmp_i1_fu_208_p2);
    sensitive << ( tmp_2_fu_196_p2 );
    sensitive << ( tmp_5_fu_202_p2 );

    SC_METHOD(thread_tmp_i2_fu_219_p2);
    sensitive << ( tmp_i1_reg_442 );
    sensitive << ( j_assign_reg_136 );

    SC_METHOD(thread_tmp_i_fu_269_p3);
    sensitive << ( tmp_10_fu_229_p3 );
    sensitive << ( p_neg_t_i_fu_253_p2 );
    sensitive << ( p_lshr_f_i_cast_fu_259_p4 );

    SC_METHOD(thread_tmp_s_fu_185_p2);
    sensitive << ( x_kw_reg_419 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_assign_reg_114 );

    SC_METHOD(thread_x_kw_fu_164_p2);
    sensitive << ( x );

    SC_METHOD(thread_y_kh_fu_170_p2);
    sensitive << ( y );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_185_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_fu_214_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fdot_3d_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, B_offset, "(port)B_offset");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_6_address0, "l_conv_pool_bn_bst0_6_address0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_6_ce0, "l_conv_pool_bn_bst0_6_ce0");
    sc_trace(mVcdFile, l_conv_pool_bn_bst0_6_q0, "l_conv_pool_bn_bst0_6_q0");
    sc_trace(mVcdFile, bits_address0, "bits_address0");
    sc_trace(mVcdFile, bits_ce0, "bits_ce0");
    sc_trace(mVcdFile, bits_q0, "bits_q0");
    sc_trace(mVcdFile, x_kw_fu_164_p2, "x_kw_fu_164_p2");
    sc_trace(mVcdFile, x_kw_reg_419, "x_kw_reg_419");
    sc_trace(mVcdFile, y_kh_fu_170_p2, "y_kh_fu_170_p2");
    sc_trace(mVcdFile, y_kh_reg_424, "y_kh_reg_424");
    sc_trace(mVcdFile, B_offset_cast_fu_176_p1, "B_offset_cast_fu_176_p1");
    sc_trace(mVcdFile, B_offset_cast_reg_429, "B_offset_cast_reg_429");
    sc_trace(mVcdFile, tmp_1_fu_190_p2, "tmp_1_fu_190_p2");
    sc_trace(mVcdFile, tmp_1_reg_437, "tmp_1_reg_437");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_s_fu_185_p2, "tmp_s_fu_185_p2");
    sc_trace(mVcdFile, tmp_i1_fu_208_p2, "tmp_i1_fu_208_p2");
    sc_trace(mVcdFile, tmp_i1_reg_442, "tmp_i1_reg_442");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_4_fu_214_p2, "tmp_4_fu_214_p2");
    sc_trace(mVcdFile, tmp_10_fu_229_p3, "tmp_10_fu_229_p3");
    sc_trace(mVcdFile, tmp_10_reg_455, "tmp_10_reg_455");
    sc_trace(mVcdFile, sum_i_fu_277_p2, "sum_i_fu_277_p2");
    sc_trace(mVcdFile, sum_i_reg_460, "sum_i_reg_460");
    sc_trace(mVcdFile, tmp_11_fu_282_p1, "tmp_11_fu_282_p1");
    sc_trace(mVcdFile, tmp_11_reg_465, "tmp_11_reg_465");
    sc_trace(mVcdFile, tmp_12_fu_286_p1, "tmp_12_fu_286_p1");
    sc_trace(mVcdFile, tmp_12_reg_470, "tmp_12_reg_470");
    sc_trace(mVcdFile, tmp_3_fu_290_p2, "tmp_3_fu_290_p2");
    sc_trace(mVcdFile, tmp_3_reg_475, "tmp_3_reg_475");
    sc_trace(mVcdFile, j_1_fu_296_p2, "j_1_fu_296_p2");
    sc_trace(mVcdFile, a1_fu_316_p3, "a1_fu_316_p3");
    sc_trace(mVcdFile, a1_reg_485, "a1_reg_485");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, k_1_fu_360_p2, "k_1_fu_360_p2");
    sc_trace(mVcdFile, k_1_reg_501, "k_1_reg_501");
    sc_trace(mVcdFile, tmp_9_fu_391_p3, "tmp_9_fu_391_p3");
    sc_trace(mVcdFile, tmp_9_reg_506, "tmp_9_reg_506");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, res_3_reg_516, "res_3_reg_516");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i_assign_reg_114, "i_assign_reg_114");
    sc_trace(mVcdFile, b_idx_1_reg_124, "b_idx_1_reg_124");
    sc_trace(mVcdFile, j_assign_reg_136, "j_assign_reg_136");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, n_assign_reg_146, "n_assign_reg_146");
    sc_trace(mVcdFile, tmp_7_fu_224_p1, "tmp_7_fu_224_p1");
    sc_trace(mVcdFile, sum_i_cast_fu_324_p1, "sum_i_cast_fu_324_p1");
    sc_trace(mVcdFile, tmp_4_i_fu_355_p1, "tmp_4_i_fu_355_p1");
    sc_trace(mVcdFile, res_1_fu_56, "res_1_fu_56");
    sc_trace(mVcdFile, tmp_2_fu_196_p2, "tmp_2_fu_196_p2");
    sc_trace(mVcdFile, tmp_5_fu_202_p2, "tmp_5_fu_202_p2");
    sc_trace(mVcdFile, tmp_i2_fu_219_p2, "tmp_i2_fu_219_p2");
    sc_trace(mVcdFile, p_neg_i_fu_237_p2, "p_neg_i_fu_237_p2");
    sc_trace(mVcdFile, p_lshr_i_cast_fu_243_p4, "p_lshr_i_cast_fu_243_p4");
    sc_trace(mVcdFile, p_neg_t_i_fu_253_p2, "p_neg_t_i_fu_253_p2");
    sc_trace(mVcdFile, p_lshr_f_i_cast_fu_259_p4, "p_lshr_f_i_cast_fu_259_p4");
    sc_trace(mVcdFile, tmp_i_fu_269_p3, "tmp_i_fu_269_p3");
    sc_trace(mVcdFile, tmp_fu_302_p2, "tmp_fu_302_p2");
    sc_trace(mVcdFile, tmp_6_fu_308_p3, "tmp_6_fu_308_p3");
    sc_trace(mVcdFile, p_and_t_fu_335_p3, "p_and_t_fu_335_p3");
    sc_trace(mVcdFile, p_neg_t_fu_342_p2, "p_neg_t_fu_342_p2");
    sc_trace(mVcdFile, p_and_f_fu_328_p3, "p_and_f_fu_328_p3");
    sc_trace(mVcdFile, tmp_3_i_fu_348_p3, "tmp_3_i_fu_348_p3");
    sc_trace(mVcdFile, tmp_5_i_fu_366_p2, "tmp_5_i_fu_366_p2");
    sc_trace(mVcdFile, tmp_37_to_int_fu_378_p1, "tmp_37_to_int_fu_378_p1");
    sc_trace(mVcdFile, tmp_37_neg_fu_381_p2, "tmp_37_neg_fu_381_p2");
    sc_trace(mVcdFile, tmp_6_i_fu_372_p2, "tmp_6_i_fu_372_p2");
    sc_trace(mVcdFile, tmp_8_fu_387_p1, "tmp_8_fu_387_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fdot_3d::~fdot_3d() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete l_conv_pool_bn_bst0_6_U;
    delete bits_U;
    delete ebnn_compute_faddcud_U1;
}

void fdot_3d::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void fdot_3d::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_4_fu_214_p2.read(), ap_const_lv1_0))) {
        b_idx_1_reg_124 = tmp_1_reg_437.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        b_idx_1_reg_124 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_4_fu_214_p2.read(), ap_const_lv1_0))) {
        i_assign_reg_114 = j_1_fu_296_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_assign_reg_114 = x.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_assign_reg_136 = k_1_reg_501.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_185_p2.read(), ap_const_lv1_1))) {
        j_assign_reg_136 = y.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        n_assign_reg_146 = tmp_3_reg_475.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_185_p2.read(), ap_const_lv1_1))) {
        n_assign_reg_146 = b_idx_1_reg_124.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        res_1_fu_56 = res_3_reg_516.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        res_1_fu_56 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        B_offset_cast_reg_429 = B_offset_cast_fu_176_p1.read();
        x_kw_reg_419 = x_kw_fu_164_p2.read();
        y_kh_reg_424 = y_kh_fu_170_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a1_reg_485 = a1_fu_316_p3.read();
        k_1_reg_501 = k_1_fu_360_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        res_3_reg_516 = grp_fu_156_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_214_p2.read()))) {
        sum_i_reg_460 = sum_i_fu_277_p2.read();
        tmp_10_reg_455 = n_assign_reg_146.read().range(31, 31);
        tmp_11_reg_465 = tmp_11_fu_282_p1.read();
        tmp_12_reg_470 = tmp_12_fu_286_p1.read();
        tmp_3_reg_475 = tmp_3_fu_290_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_s_fu_185_p2.read(), ap_const_lv1_1))) {
        tmp_1_reg_437 = tmp_1_fu_190_p2.read();
        tmp_i1_reg_442 = tmp_i1_fu_208_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_9_reg_506 = tmp_9_fu_391_p3.read();
    }
}

void fdot_3d::thread_A_address0() {
    A_address0 =  (sc_lv<14>) (tmp_7_fu_224_p1.read());
}

void fdot_3d::thread_A_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void fdot_3d::thread_B_offset_cast_fu_176_p1() {
    B_offset_cast_fu_176_p1 = esl_zext<6,5>(B_offset.read());
}

void fdot_3d::thread_a1_fu_316_p3() {
    a1_fu_316_p3 = (!tmp_6_fu_308_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_6_fu_308_p3.read()[0].to_bool())? ap_const_lv32_0: A_q0.read());
}

void fdot_3d::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fdot_3d::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void fdot_3d::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void fdot_3d::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fdot_3d::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fdot_3d::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fdot_3d::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fdot_3d::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fdot_3d::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_s_fu_185_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fdot_3d::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fdot_3d::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_s_fu_185_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fdot_3d::thread_ap_return() {
    ap_return = res_1_fu_56.read();
}

void fdot_3d::thread_bits_address0() {
    bits_address0 =  (sc_lv<3>) (tmp_4_i_fu_355_p1.read());
}

void fdot_3d::thread_bits_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        bits_ce0 = ap_const_logic_1;
    } else {
        bits_ce0 = ap_const_logic_0;
    }
}

void fdot_3d::thread_j_1_fu_296_p2() {
    j_1_fu_296_p2 = (!i_assign_reg_114.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_assign_reg_114.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void fdot_3d::thread_k_1_fu_360_p2() {
    k_1_fu_360_p2 = (!ap_const_lv32_1.is_01() || !j_assign_reg_136.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(j_assign_reg_136.read()));
}

void fdot_3d::thread_l_conv_pool_bn_bst0_6_address0() {
    l_conv_pool_bn_bst0_6_address0 =  (sc_lv<5>) (sum_i_cast_fu_324_p1.read());
}

void fdot_3d::thread_l_conv_pool_bn_bst0_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        l_conv_pool_bn_bst0_6_ce0 = ap_const_logic_1;
    } else {
        l_conv_pool_bn_bst0_6_ce0 = ap_const_logic_0;
    }
}

void fdot_3d::thread_p_and_f_fu_328_p3() {
    p_and_f_fu_328_p3 = esl_concat<29,3>(ap_const_lv29_0, tmp_11_reg_465.read());
}

void fdot_3d::thread_p_and_t_fu_335_p3() {
    p_and_t_fu_335_p3 = esl_concat<29,3>(ap_const_lv29_0, tmp_12_reg_470.read());
}

void fdot_3d::thread_p_lshr_f_i_cast_fu_259_p4() {
    p_lshr_f_i_cast_fu_259_p4 = n_assign_reg_146.read().range(8, 3);
}

void fdot_3d::thread_p_lshr_i_cast_fu_243_p4() {
    p_lshr_i_cast_fu_243_p4 = p_neg_i_fu_237_p2.read().range(8, 3);
}

void fdot_3d::thread_p_neg_i_fu_237_p2() {
    p_neg_i_fu_237_p2 = (!ap_const_lv32_0.is_01() || !n_assign_reg_146.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(n_assign_reg_146.read()));
}

void fdot_3d::thread_p_neg_t_fu_342_p2() {
    p_neg_t_fu_342_p2 = (!ap_const_lv32_0.is_01() || !p_and_t_fu_335_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_and_t_fu_335_p3.read()));
}

void fdot_3d::thread_p_neg_t_i_fu_253_p2() {
    p_neg_t_i_fu_253_p2 = (!ap_const_lv6_0.is_01() || !p_lshr_i_cast_fu_243_p4.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_0) - sc_biguint<6>(p_lshr_i_cast_fu_243_p4.read()));
}

void fdot_3d::thread_sum_i_cast_fu_324_p1() {
    sum_i_cast_fu_324_p1 = esl_sext<64,6>(sum_i_reg_460.read());
}

void fdot_3d::thread_sum_i_fu_277_p2() {
    sum_i_fu_277_p2 = (!tmp_i_fu_269_p3.read().is_01() || !B_offset_cast_reg_429.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_i_fu_269_p3.read()) + sc_biguint<6>(B_offset_cast_reg_429.read()));
}

void fdot_3d::thread_tmp_10_fu_229_p3() {
    tmp_10_fu_229_p3 = n_assign_reg_146.read().range(31, 31);
}

void fdot_3d::thread_tmp_11_fu_282_p1() {
    tmp_11_fu_282_p1 = n_assign_reg_146.read().range(3-1, 0);
}

void fdot_3d::thread_tmp_12_fu_286_p1() {
    tmp_12_fu_286_p1 = p_neg_i_fu_237_p2.read().range(3-1, 0);
}

void fdot_3d::thread_tmp_1_fu_190_p2() {
    tmp_1_fu_190_p2 = (!ap_const_lv32_3.is_01() || !b_idx_1_reg_124.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_3) + sc_biguint<32>(b_idx_1_reg_124.read()));
}

void fdot_3d::thread_tmp_2_fu_196_p2() {
    tmp_2_fu_196_p2 = (!ap_const_lv32_5.is_01())? sc_lv<32>(): i_assign_reg_114.read() << (unsigned short)ap_const_lv32_5.to_uint();
}

void fdot_3d::thread_tmp_37_neg_fu_381_p2() {
    tmp_37_neg_fu_381_p2 = (tmp_37_to_int_fu_378_p1.read() ^ ap_const_lv32_80000000);
}

void fdot_3d::thread_tmp_37_to_int_fu_378_p1() {
    tmp_37_to_int_fu_378_p1 = a1_reg_485.read();
}

void fdot_3d::thread_tmp_3_fu_290_p2() {
    tmp_3_fu_290_p2 = (!ap_const_lv32_1.is_01() || !n_assign_reg_146.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(n_assign_reg_146.read()));
}

void fdot_3d::thread_tmp_3_i_fu_348_p3() {
    tmp_3_i_fu_348_p3 = (!tmp_10_reg_455.read()[0].is_01())? sc_lv<32>(): ((tmp_10_reg_455.read()[0].to_bool())? p_neg_t_fu_342_p2.read(): p_and_f_fu_328_p3.read());
}

void fdot_3d::thread_tmp_4_fu_214_p2() {
    tmp_4_fu_214_p2 = (!j_assign_reg_136.read().is_01() || !y_kh_reg_424.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j_assign_reg_136.read()) < sc_bigint<32>(y_kh_reg_424.read()));
}

void fdot_3d::thread_tmp_4_i_fu_355_p1() {
    tmp_4_i_fu_355_p1 = esl_sext<64,32>(tmp_3_i_fu_348_p3.read());
}

void fdot_3d::thread_tmp_5_fu_202_p2() {
    tmp_5_fu_202_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): i_assign_reg_114.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void fdot_3d::thread_tmp_5_i_fu_366_p2() {
    tmp_5_i_fu_366_p2 = (bits_q0.read() & l_conv_pool_bn_bst0_6_q0.read());
}

void fdot_3d::thread_tmp_6_fu_308_p3() {
    tmp_6_fu_308_p3 = tmp_fu_302_p2.read().range(31, 31);
}

void fdot_3d::thread_tmp_6_i_fu_372_p2() {
    tmp_6_i_fu_372_p2 = (!tmp_5_i_fu_366_p2.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_i_fu_366_p2.read() == ap_const_lv8_0);
}

void fdot_3d::thread_tmp_7_fu_224_p1() {
    tmp_7_fu_224_p1 = esl_sext<64,32>(tmp_i2_fu_219_p2.read());
}

void fdot_3d::thread_tmp_8_fu_387_p1() {
    tmp_8_fu_387_p1 = tmp_37_neg_fu_381_p2.read();
}

void fdot_3d::thread_tmp_9_fu_391_p3() {
    tmp_9_fu_391_p3 = (!tmp_6_i_fu_372_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_6_i_fu_372_p2.read()[0].to_bool())? tmp_8_fu_387_p1.read(): a1_reg_485.read());
}

void fdot_3d::thread_tmp_fu_302_p2() {
    tmp_fu_302_p2 = (i_assign_reg_114.read() | j_assign_reg_136.read());
}

void fdot_3d::thread_tmp_i1_fu_208_p2() {
    tmp_i1_fu_208_p2 = (!tmp_2_fu_196_p2.read().is_01() || !tmp_5_fu_202_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_2_fu_196_p2.read()) - sc_biguint<32>(tmp_5_fu_202_p2.read()));
}

void fdot_3d::thread_tmp_i2_fu_219_p2() {
    tmp_i2_fu_219_p2 = (!tmp_i1_reg_442.read().is_01() || !j_assign_reg_136.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_i1_reg_442.read()) + sc_biguint<32>(j_assign_reg_136.read()));
}

void fdot_3d::thread_tmp_i_fu_269_p3() {
    tmp_i_fu_269_p3 = (!tmp_10_fu_229_p3.read()[0].is_01())? sc_lv<6>(): ((tmp_10_fu_229_p3.read()[0].to_bool())? p_neg_t_i_fu_253_p2.read(): p_lshr_f_i_cast_fu_259_p4.read());
}

void fdot_3d::thread_tmp_s_fu_185_p2() {
    tmp_s_fu_185_p2 = (!i_assign_reg_114.read().is_01() || !x_kw_reg_419.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_assign_reg_114.read()) < sc_bigint<32>(x_kw_reg_419.read()));
}

void fdot_3d::thread_x_kw_fu_164_p2() {
    x_kw_fu_164_p2 = (!x.read().is_01() || !ap_const_lv32_3.is_01())? sc_lv<32>(): (sc_biguint<32>(x.read()) + sc_biguint<32>(ap_const_lv32_3));
}

void fdot_3d::thread_y_kh_fu_170_p2() {
    y_kh_fu_170_p2 = (!y.read().is_01() || !ap_const_lv32_3.is_01())? sc_lv<32>(): (sc_biguint<32>(y.read()) + sc_biguint<32>(ap_const_lv32_3));
}

void fdot_3d::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_s_fu_185_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_4_fu_214_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXX";
            break;
    }
}

}

