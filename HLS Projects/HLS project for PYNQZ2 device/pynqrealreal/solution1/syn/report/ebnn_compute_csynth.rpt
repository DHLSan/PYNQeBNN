

================================================================
== Vivado HLS Report for 'ebnn_compute'
================================================================
* Date:           Thu Jun 24 05:08:02 2021

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        pynqrealreal
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.39|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        +------------------+-------+-----+-----+-----+-----+---------+
        |                  |       |  Latency  |  Interval | Pipeline|
        |     Instance     | Module| min | max | min | max |   Type  |
        +------------------+-------+-----+-----+-----+-----+---------+
        |grp_fconv_fu_416  |fconv  |    ?|    ?|    ?|    ?|   none  |
        +------------------+-------+-----+-----+-----+-----+---------+

        * Loop: 
        +-------------+------+------+----------+-----------+-----------+------+----------+
        |             |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1     |    45|    45|         1|          -|          -|    45|    no    |
        |- Loop 2     |     ?|     ?|         ?|          -|          -|    10|    no    |
        |- Loop 3     |  1790|  1790|       179|          -|          -|    10|    no    |
        | + Loop 3.1  |   135|   135|         3|          -|          -|    45|    no    |
        +-------------+------+------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|    407|
|FIFO             |        -|      -|       -|      -|
|Instance         |       34|     12|    4184|   6891|
|Memory           |        1|      -|     336|     63|
|Multiplexer      |        -|      -|       -|    420|
|Register         |        -|      -|     664|      -|
+-----------------+---------+-------+--------+-------+
|Total            |       35|     12|    5184|   7781|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |       12|      5|       4|     14|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +-----------------------------------+---------------------------------+---------+-------+------+------+
    |              Instance             |              Module             | BRAM_18K| DSP48E|  FF  |  LUT |
    +-----------------------------------+---------------------------------+---------+-------+------+------+
    |ebnn_compute_fadddEe_U26           |ebnn_compute_fadddEe             |        0|      2|   205|   390|
    |ebnn_compute_fcmpg8j_U30           |ebnn_compute_fcmpg8j             |        0|      0|    66|   239|
    |ebnn_compute_fdivfYi_U28           |ebnn_compute_fdivfYi             |        0|      0|   761|   994|
    |ebnn_compute_fmuleOg_U27           |ebnn_compute_fmuleOg             |        0|      3|   143|   321|
    |ebnn_compute_inputINT_s_axi_U      |ebnn_compute_inputINT_s_axi      |       32|      0|   110|   110|
    |ebnn_compute_outputCONTRL_s_axi_U  |ebnn_compute_outputCONTRL_s_axi  |        0|      0|    36|    40|
    |ebnn_compute_outputINT_s_axi_U     |ebnn_compute_outputINT_s_axi     |        2|      0|   110|   110|
    |ebnn_compute_sitosc4_U29           |ebnn_compute_sitosc4             |        0|      0|   340|   554|
    |grp_fconv_fu_416                   |fconv                            |        0|      7|  2413|  4133|
    +-----------------------------------+---------------------------------+---------+-------+------+------+
    |Total                              |                                 |       34|     12|  4184|  6891|
    +-----------------------------------+---------------------------------+---------+-------+------+------+

    * DSP48: 
    N/A

    * Memory: 
    +--------------------------+----------------------+---------+----+----+------+-----+------+-------------+
    |          Memory          |        Module        | BRAM_18K| FF | LUT| Words| Bits| Banks| W*Bits*Banks|
    +--------------------------+----------------------+---------+----+----+------+-----+------+-------------+
    |l_b_linear_bn_softma_6_U  |ebnn_compute_l_b_mb6  |        1|   0|   0|   450|    8|     1|         3600|
    |l_b_linear_bn_softma_1_U  |ebnn_compute_l_b_ncg  |        0|  32|   5|    10|   32|     1|          320|
    |l_b_linear_bn_softma_4_U  |ebnn_compute_l_b_ocq  |        0|  32|   5|    10|   32|     1|          320|
    |l_b_linear_bn_softma_3_U  |ebnn_compute_l_b_pcA  |        0|  32|   5|    10|   32|     1|          320|
    |l_b_linear_bn_softma_5_U  |ebnn_compute_l_b_qcK  |        0|  32|   5|    10|   32|     1|          320|
    |l_b_linear_bn_softma_U    |ebnn_compute_l_b_rcU  |        0|  32|   5|    10|   32|     1|          320|
    |l_conv_pool_bn_bst0_1_U   |ebnn_compute_l_cohbi  |        0|  32|   5|    10|   32|     1|          320|
    |l_conv_pool_bn_bst0_4_U   |ebnn_compute_l_coibs  |        0|  32|   5|    10|   32|     1|          320|
    |l_conv_pool_bn_bst0_3_U   |ebnn_compute_l_cojbC  |        0|  32|   5|    10|   32|     1|          320|
    |l_conv_pool_bn_bst0_5_U   |ebnn_compute_l_cokbM  |        0|  32|   5|    10|   32|     1|          320|
    |l_conv_pool_bn_bst0_s_U   |ebnn_compute_l_colbW  |        0|  32|   5|    10|   32|     1|          320|
    |temp1_U                   |ebnn_compute_temp1    |        0|  16|  13|   104|    8|     1|          832|
    +--------------------------+----------------------+---------+----+----+------+-----+------+-------------+
    |Total                     |                      |        1| 336|  63|   654|  336|    12|         7632|
    +--------------------------+----------------------+---------+----+----+------+-----+------+-------------+

    * FIFO: 
    N/A

    * Expression: 
    +---------------------------+----------+-------+---+----+------------+------------+
    |       Variable Name       | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +---------------------------+----------+-------+---+----+------------+------------+
    |c_1_fu_733_p2              |     +    |      0|  0|  15|           7|           7|
    |i_1_fu_554_p2              |     +    |      0|  0|  15|           6|           1|
    |i_fu_474_p2                |     +    |      0|  0|  15|           6|           1|
    |j_2_i_fu_491_p2            |     +    |      0|  0|  13|           4|           1|
    |j_i_i_fu_537_p2            |     +    |      0|  0|  13|           4|           1|
    |next_mul_fu_521_p2         |     +    |      0|  0|  16|           9|           6|
    |res_3_fu_588_p2            |     +    |      0|  0|  18|          10|          11|
    |res_fu_782_p2              |     +    |      0|  0|  17|          10|          10|
    |sum3_i_fu_569_p2           |     +    |      0|  0|  16|           9|           9|
    |tmp_17_i_fu_515_p2         |     +    |      0|  0|  16|           9|           6|
    |tmp_1_i_i_fu_772_p2        |     +    |      0|  0|   7|           4|           4|
    |tmp_9_i_i_cast3_fu_763_p2  |     +    |      0|  0|   7|           4|           4|
    |c_fu_665_p2                |     -    |      0|  0|  15|           8|           8|
    |tmp_24_fu_865_p2           |    and   |      0|  0|   8|           1|           1|
    |tmp_26_fu_871_p2           |    and   |      0|  0|   8|           1|           1|
    |exitcond1_fu_468_p2        |   icmp   |      0|  0|  11|           6|           6|
    |exitcond_fu_548_p2         |   icmp   |      0|  0|  11|           6|           6|
    |exitcond_i_fu_485_p2       |   icmp   |      0|  0|   9|           4|           4|
    |exitcond_i_i_fu_531_p2     |   icmp   |      0|  0|   9|           4|           4|
    |notlhs1_fu_847_p2          |   icmp   |      0|  0|  11|           8|           2|
    |notlhs_fu_829_p2           |   icmp   |      0|  0|  11|           8|           2|
    |notrhs1_fu_853_p2          |   icmp   |      0|  0|  18|          23|           1|
    |notrhs_fu_835_p2           |   icmp   |      0|  0|  18|          23|           1|
    |tmp_22_fu_841_p2           |    or    |      0|  0|   8|           1|           1|
    |tmp_23_fu_859_p2           |    or    |      0|  0|   8|           1|           1|
    |max_idx_2_i_i_fu_876_p3    |  select  |      0|  0|  32|           1|          32|
    |max_res_1_i_i_fu_883_p3    |  select  |      0|  0|  32|           1|          32|
    |tmp_fu_599_p2              |    xor   |      0|  0|  15|           8|           2|
    |v_assign_fu_605_p2         |    xor   |      0|  0|  15|           8|           8|
    +---------------------------+----------+-------+---+----+------------+------------+
    |Total                      |          |      0|  0| 407|         194|         173|
    +---------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +---------------------+-----+-----------+-----+-----------+
    |         Name        | LUT | Input Size| Bits| Total Bits|
    +---------------------+-----+-----------+-----+-----------+
    |ap_NS_fsm            |  225|         52|    1|         52|
    |c_idx_1_i_reg_333    |    9|          2|    9|         18|
    |grp_fu_441_opcode    |   15|          3|    2|          6|
    |grp_fu_441_p0        |   21|          4|   32|        128|
    |grp_fu_441_p1        |   21|          4|   32|        128|
    |i_i1_reg_393         |    9|          2|    6|         12|
    |i_i_reg_310          |    9|          2|    6|         12|
    |j_i_reg_321          |    9|          2|    4|          8|
    |max_idx_i_i_reg_345  |    9|          2|    4|          8|
    |max_res_i_i_reg_369  |    9|          2|   32|         64|
    |phi_mul_reg_381      |    9|          2|    9|         18|
    |res_i_reg_404        |    9|          2|   10|         20|
    |temp1_address0       |   21|          4|    7|         28|
    |temp1_ce0            |   15|          3|    1|          3|
    |temp1_d0             |   15|          3|    8|         24|
    |temp1_we0            |   15|          3|    1|          3|
    +---------------------+-----+-----------+-----+-----------+
    |Total                |  420|         92|  164|        532|
    +---------------------+-----+-----------+-----+-----------+

    * Register: 
    +----------------------------------+----+----+-----+-----------+
    |               Name               | FF | LUT| Bits| Const Bits|
    +----------------------------------+----+----+-----+-----------+
    |ap_CS_fsm                         |  51|   0|   51|          0|
    |ap_reg_grp_fconv_fu_416_ap_start  |   1|   0|    1|          0|
    |c_idx_1_i_reg_333                 |   9|   0|    9|          0|
    |f_assign_6_reg_1091               |  32|   0|   32|          0|
    |f_assign_7_reg_1096               |  32|   0|   32|          0|
    |f_idx_i_reg_932                   |   4|   0|    5|          1|
    |i_1_reg_988                       |   6|   0|    6|          0|
    |i_i1_reg_393                      |   6|   0|    6|          0|
    |i_i_reg_310                       |   6|   0|    6|          0|
    |j_2_i_reg_902                     |   4|   0|    4|          0|
    |j_i_i_reg_980                     |   4|   0|    4|          0|
    |j_i_reg_321                       |   4|   0|    4|          0|
    |l_b_linear_bn_softma_11_reg_1081  |  32|   0|   32|          0|
    |l_b_linear_bn_softma_13_reg_1086  |  32|   0|   32|          0|
    |l_b_linear_bn_softma_15_reg_1056  |  32|   0|   32|          0|
    |l_b_linear_bn_softma_17_reg_1066  |  32|   0|   32|          0|
    |l_b_linear_bn_softma_9_reg_1046   |  32|   0|   32|          0|
    |l_conv_pool_bn_bst0_10_reg_942    |  32|   0|   32|          0|
    |l_conv_pool_bn_bst0_12_reg_947    |  32|   0|   32|          0|
    |l_conv_pool_bn_bst0_14_reg_952    |  32|   0|   32|          0|
    |l_conv_pool_bn_bst0_16_reg_957    |  32|   0|   32|          0|
    |l_conv_pool_bn_bst0_8_reg_937     |  32|   0|   32|          0|
    |max_idx_1_i_i_reg_357             |  32|   0|   32|          0|
    |max_idx_i_i_cast5_reg_972         |   4|   0|   32|         28|
    |max_idx_i_i_reg_345               |   4|   0|    4|          0|
    |max_res_i_i_reg_369               |  32|   0|   32|          0|
    |next_mul_reg_967                  |   9|   0|    9|          0|
    |phi_mul_reg_381                   |   9|   0|    9|          0|
    |reg_461                           |  32|   0|   32|          0|
    |res_i_i_reg_1041                  |  32|   0|   32|          0|
    |res_i_reg_404                     |  10|   0|   10|          0|
    |tmp_17_i_reg_962                  |   9|   0|    9|          0|
    |tmp_25_reg_1101                   |   1|   0|    1|          0|
    |tmp_30_reg_1008                   |   2|   0|    2|          0|
    |tmp_32_reg_1018                   |   3|   0|    3|          0|
    |tmp_46_reg_1013                   |   2|   0|    2|          0|
    |tmp_77_i_i_reg_1028               |   4|   0|   64|         60|
    +----------------------------------+----+----+-----+-----------+
    |Total                             | 664|   0|  753|         89|
    +----------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+----------------------------+-----+-----+------------+--------------+--------------+
|          RTL Ports         | Dir | Bits|  Protocol  | Source Object|    C Type    |
+----------------------------+-----+-----+------------+--------------+--------------+
|s_axi_inputINT_AWVALID      |  in |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_AWREADY      | out |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_AWADDR       |  in |   17|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_WVALID       |  in |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_WREADY       | out |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_WDATA        |  in |   32|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_WSTRB        |  in |    4|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_ARVALID      |  in |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_ARREADY      | out |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_ARADDR       |  in |   17|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_RVALID       | out |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_RREADY       |  in |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_RDATA        | out |   32|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_RRESP        | out |    2|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_BVALID       | out |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_BREADY       |  in |    1|    s_axi   |   inputINT   |     array    |
|s_axi_inputINT_BRESP        | out |    2|    s_axi   |   inputINT   |     array    |
|s_axi_outputCONTRL_AWVALID  |  in |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_AWREADY  | out |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_AWADDR   |  in |    4|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_WVALID   |  in |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_WREADY   | out |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_WDATA    |  in |   32|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_WSTRB    |  in |    4|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_ARVALID  |  in |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_ARREADY  | out |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_ARADDR   |  in |    4|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_RVALID   | out |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_RREADY   |  in |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_RDATA    | out |   32|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_RRESP    | out |    2|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_BVALID   | out |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_BREADY   |  in |    1|    s_axi   | outputCONTRL |  return void |
|s_axi_outputCONTRL_BRESP    | out |    2|    s_axi   | outputCONTRL |  return void |
|s_axi_outputINT_AWVALID     |  in |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_AWREADY     | out |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_AWADDR      |  in |    6|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_WVALID      |  in |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_WREADY      | out |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_WDATA       |  in |   32|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_WSTRB       |  in |    4|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_ARVALID     |  in |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_ARREADY     | out |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_ARADDR      |  in |    6|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_RVALID      | out |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_RREADY      |  in |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_RDATA       | out |   32|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_RRESP       | out |    2|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_BVALID      | out |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_BREADY      |  in |    1|    s_axi   |   outputINT  |     array    |
|s_axi_outputINT_BRESP       | out |    2|    s_axi   |   outputINT  |     array    |
|ap_clk                      |  in |    1| ap_ctrl_hs | ebnn_compute | return value |
|ap_rst_n                    |  in |    1| ap_ctrl_hs | ebnn_compute | return value |
|interrupt                   | out |    1| ap_ctrl_hs | ebnn_compute | return value |
+----------------------------+-----+-----+------------+--------------+--------------+

